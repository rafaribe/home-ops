---
# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
clusterName: &cluster ${clusterName}
endpoint: "https://${clusterEndpointIP}:6443"

clusterPodNets:
  - 10.42.0.0/16
clusterSvcNets:
  - 10.43.0.0/16

# renovate: depName=ghcr.io/siderolabs/installer datasource=docker
talosVersion: v1.11.2
# renovate: depName=ghcr.io/siderolabs/kubelet datasource=docker
kubernetesVersion: v1.34.1

additionalApiServerCertSans: &sans
  - ${clusterEndpointIP}
  - ${clusterName}.${clusterDNSSuffix}
  - 127.0.0.1 # KubePrism
  - "*.${clusterDNSSuffix}"
  - 10.0.0.1 # IP for gateway, port 6443 forwarded to cluster endpoint IPs

additionalMachineCertSans: *sans

cniConfig:
  name: none

nodes:
  # Turing Pi Arm64 Nodes
  - hostname: tpi-1.${clusterDNSSuffix}
    ipAddress: 10.0.1.12
    nameservers: &nameservers
      - "10.0.0.254"
      - "1.1.1.1"
    controlPlane: false
    installDiskSelector:
      type: sd
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "ca:d1:4d:b4:f9:bd"
        dhcp: true
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: 10.0.0.1
    machineSpec:
      mode: metal
      arch: arm64
    schematic:
      overlay:
        name: turingrk1
        image: siderolabs/sbc-rockchip
      customization:
        extraKernelArgs:
          - net.ifnames=0
        systemExtensions:
          officialExtensions:
            - siderolabs/binfmt-misc
            - siderolabs/util-linux-tools
    patches:
      - &kubelet-gc |-
        machine:
          kubelet:
            extraArgs:
              rotate-server-certificates: true
              image-gc-high-threshold: 75
              image-gc-low-threshold: 70
  - hostname: tpi-2.${clusterDNSSuffix}
    ipAddress: 10.0.1.13
    nameservers: *nameservers
    controlPlane: false
    installDiskSelector:
      type: sd
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "1e:66:39:1d:77:c0"
        dhcp: true
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: 10.0.0.1
    machineSpec:
      mode: metal
      arch: arm64
    schematic:
      overlay:
        name: turingrk1
        image: siderolabs/sbc-rockchip
      customization:
        extraKernelArgs:
          - net.ifnames=0
        systemExtensions:
          officialExtensions:
            - siderolabs/binfmt-misc
            - siderolabs/util-linux-tools
    patches:
      - *kubelet-gc
  - hostname: tpi-3.${clusterDNSSuffix}
    ipAddress: 10.0.1.14
    nameservers: *nameservers
    controlPlane: false
    installDiskSelector:
      type: sd
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "8e:56:66:61:bf:36"
        dhcp: true
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: 10.0.0.1
    machineSpec:
      mode: metal
      arch: arm64
    schematic:
      overlay:
        name: turingrk1
        image: siderolabs/sbc-rockchip
      customization:
        extraKernelArgs:
          - net.ifnames=0
        systemExtensions:
          officialExtensions:
            - siderolabs/binfmt-misc
            - siderolabs/util-linux-tools
    patches:
      - *kubelet-gc
  - hostname: tpi-4.${clusterDNSSuffix}
    ipAddress: 10.0.1.15
    nameservers: *nameservers
    controlPlane: false
    installDiskSelector:
      type: sd
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "8e:a1:08:d0:12:5c"
        dhcp: true
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: 10.0.0.1
    machineSpec:
      mode: metal
      arch: arm64
    schematic:
      overlay:
        name: turingrk1
        image: siderolabs/sbc-rockchip
      customization:
        extraKernelArgs:
          - net.ifnames=0
        systemExtensions:
          officialExtensions:
            - siderolabs/binfmt-misc
            - siderolabs/util-linux-tools
    patches:
      - *kubelet-gc
  # x86_64 NUC / Server Nodes
  # If I decide to scrap the utility cluster, this node comes back here.
  - hostname: srv-01.${clusterDNSSuffix}
    ipAddress: 10.0.0.3
    nameservers: *nameservers
    controlPlane: true
    installDiskSelector:
      wwid: naa.5002538d7025e8be
      type: ssd
      size: <= 256 GB
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "10:c3:7b:1d:d6:f4"
        dhcp: true
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: 10.0.0.1
        vip:
          ip: ${clusterEndpointIP}
  - hostname: srv-02.${clusterDNSSuffix}
    ipAddress: 10.0.1.3
    nameservers: *nameservers
    controlPlane: false
    installDiskSelector:
      wwid: naa.502b2a201d1c1b1a
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "18:66:da:29:9f:9d"
        dhcp: true
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: 10.0.0.1
  - hostname: srv-03.${clusterDNSSuffix}
    ipAddress: 10.0.1.4
    nameservers: *nameservers
    controlPlane: false
    installDiskSelector:
      wwid: "naa.502b2a201d1c1b1a"
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "18:66:da:3c:a4:86"
        dhcp: true
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: 10.0.0.1

  - hostname: srv-04.${clusterDNSSuffix}
    ipAddress: 10.0.1.5
    nameservers: *nameservers
    controlPlane: false
    installDiskSelector:
      type: "ssd"
      model: WDC*
      size: <= 250 GB
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "50:7b:9d:d3:95:a3"
        dhcp: true
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: 10.0.0.1
  - hostname: srv-05.${clusterDNSSuffix}
    ipAddress: 10.0.1.8
    nameservers: *nameservers
    controlPlane: true
    installDiskSelector:
      wwid: "eui.6479a73121231918"
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "00:1e:06:45:43:3e"
        dhcp: true
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: 10.0.0.1
  - hostname: srv-06.${clusterDNSSuffix}
    ipAddress: 10.0.1.9
    nameservers: *nameservers
    controlPlane: true
    installDiskSelector:
      type: "ssd"
      model: UDSS*
      size: <= 520 GB
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "00:e0:4c:2f:6b:76"
        dhcp: true
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: 10.0.0.1
        vip:
          ip: ${clusterEndpointIP}
  - hostname: srv-07.${clusterDNSSuffix}
    ipAddress: 10.0.1.10
    nameservers: *nameservers
    controlPlane: false
    installDiskSelector:
      type: "ssd"
      model: UDSS*
      size: <= 520 GB
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "00:e0:4c:2f:6b:41"
        dhcp: true
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: 10.0.0.1
controlPlane:
  noSchematicValidate: true
  schematic:
    customization:
      extraKernelArgs:
        - -init_on_alloc # Less security, faster puter
        - -selinux # Less security, faster puter
        - apparmor=0 # Less security, faster puter
        - init_on_alloc=0 # Less security, faster puter
        - init_on_free=0 # Less security, faster puter
        - amd_iommu=on # PCI Passthrough
        - iommu=pt # PCI Passthrough
        - pcie_aspm=off # Disable PCIe ASPM
        - mitigations=off # Less security, faster puter
        - security=none # Less security, faster puter
        - talos.auditd.disabled=1 # Less security, faster puter
      systemExtensions:
        officialExtensions:
          - siderolabs/i915
          - siderolabs/intel-ucode
          - siderolabs/binfmt-misc
          - siderolabs/util-linux-tools
          - siderolabs/iscsi-tools
  nodeLabels:
    topology.kubernetes.io/region: *cluster
    topology.kubernetes.io/zone: m
  patches:
    # set all disks to no scheduler and allow usb disks to be handled by rook/ceph
    - &udev |-
      machine:
        udev:
          rules:
            # set all disks to `none` scheduler (optimal setting for Ceph and ZFS)
            - SUBSYSTEM=="block", ENV{DEVTYPE}=="disk", ATTR{queue/scheduler}="none"
            # allow GID 44 (video) to use Intel GPU
            #- SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
            - SUBSYSTEM=="drm", GROUP="44", MODE="0660"
            # Allow ceph to recognize usb devices as scsi via udev custom rules
            # https://github.com/rook/rook/issues/14699#issuecomment-2350953135
            - ACTION=="add", ENV{ID_TYPE}=="disk", ENV{ID_BUS}=="usb", ENV{ID_BUS}="scsi"
            - ACTION=="change", ENV{ID_TYPE}=="disk", ENV{ID_BUS}=="usb", ENV{ID_BUS}="scsi"
            - ACTION=="online", ENV{ID_TYPE}=="disk", ENV{ID_BUS}=="usb", ENV{ID_BUS}="scsi"
    # Configure containerd
    - &containerdPatch |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |-
              [plugins."io.containerd.grpc.v1.cri"]
                enable_unprivileged_ports = true
                enable_unprivileged_icmp = true
              [plugins."io.containerd.grpc.v1.cri".containerd]
                discard_unpacked_layers = false
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                discard_unpacked_layers = false

    # Disable search domain everywhere
    - &disableSearchDomainPatch |-
      machine:
        network:
          disableSearchDomain: true

    # Disable cluster discovery
    - &discoveryPatch |-
      cluster:
        discovery:
          registries:
            kubernetes:
              disabled: true
            service:
              disabled: false

    # Configure kubelet
    - &kubeletPatch |-
      machine:
        kubelet:
          extraConfig:
            maxPods: 150
          extraArgs:
            rotate-server-certificates: true
          nodeIP:
            validSubnets:
              - 10.0.0.0/22

    # Enable KubePrism
    - &kubePrismPatch |-
      machine:
        features:
          kubePrism:
            enabled: true
            port: 7445

    # Configure NFS mount options
    - &nfsPatch |-
      machine:
        files:
          - op: overwrite
            path: /etc/nfsmount.conf
            permissions: 0o644
            content: |
              [ NFSMount_Global_Options ]
              nfsvers=4.2
              hard=True
              noatime=True
              nodiratime=True
              rsize=131072
              wsize=131072
              nconnect=16

    # Configure NTP
    - &ntpPatch |-
      machine:
        time:
          disabled: false
          servers:
            - time.cloudflare.com

    # Static host entries
    - &staticHostEntriesPatch |-
      machine:
        network:
          extraHostEntries:
            - ip: ${clusterEndpointIP}
              aliases:
                - main.${clusterDNSSuffix}

    # Custom sysctl settings
    - &sysctlPatch |-
      machine:
        sysctls:
          fs.inotify.max_user_watches: 1048576   # Watchdog
          fs.inotify.max_user_instances: 8192    # Watchdog
          net.core.default_qdisc: fq             # 10Gb/s
          net.core.rmem_max: 67108864            # 10Gb/s | Cloudflared / QUIC
          net.core.wmem_max: 67108864            # 10Gb/s | Cloudflared / QUIC
          net.ipv4.tcp_congestion_control: bbr   # 10Gb/s
          net.ipv4.tcp_fastopen: 3               # Send and accept data in the opening SYN packet
          net.ipv4.tcp_mtu_probing: 1            # 10Gb/s | Jumbo frames
          net.ipv4.tcp_rmem: 4096 87380 33554432 # 10Gb/s
          net.ipv4.tcp_wmem: 4096 65536 33554432 # 10Gb/s
          net.ipv4.tcp_window_scaling: 1         # 10Gb/s
          user.max_user_namespaces: 11255        # User Namespaces
          vm.nr_hugepages: 1024                  # PostgreSQL

    # Cluster configuration
    - |-
      cluster:
        allowSchedulingOnControlPlanes: true
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
        coreDNS:
          disabled: true
        proxy:
          disabled: true
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0

    # ETCD configuration
    - |-
      cluster:
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
          advertisedSubnets:
            - 10.0.0.0/22

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:admin
            allowedKubernetesNamespaces:
              - kube-system
              - system
              - system-upgrade
              - actions-runner-system
    # Mount openebs-hostpath in kubelet
    - &openebs-hostpath |-
      machine:
        kubelet:
          extraMounts:
            - destination: /var/openebs/local
              type: bind
              source: /var/openebs/local
              options: ["bind", "rshared", "rw"]
    # Enable hostDNS:
    - &hostdns |-
      machine:
        features:
          hostDNS:
            enabled: true
            resolveMemberNames: true
            forwardKubeDNSToHost: false
    # Enable MutatingAdmissionPolicy
    - |-
      cluster:
        apiServer:
          extraArgs:
            runtime-config: admissionregistration.k8s.io/v1alpha1=true
            feature-gates: MutatingAdmissionPolicy=true
worker:
  noSchematicValidate: true
  schematic:
    extraKernelArgs:
      - -init_on_alloc # Less security, faster puter
      - -selinux # Less security, faster puter
      - apparmor=0 # Less security, faster puter
      - init_on_alloc=0 # Less security, faster puter
      - init_on_free=0 # Less security, faster puter
      - amd_iommu=on # PCI Passthrough
      - iommu=pt # PCI Passthrough
      - pcie_aspm=off # Disable PCIe ASPM
      - mitigations=off # Less security, faster puter
      - security=none # Less security, faster puter
      - talos.auditd.disabled=1 # Less security, faster puter
    customization:
      systemExtensions:
        officialExtensions:
          - siderolabs/i915
          - siderolabs/intel-ucode
          - siderolabs/binfmt-misc
          - siderolabs/util-linux-tools
          - siderolabs/iscsi-tools
  nodeLabels:
    topology.kubernetes.io/region: *cluster
    topology.kubernetes.io/zone: w

  patches:
    - *containerdPatch
    - *disableSearchDomainPatch
    - *discoveryPatch
    - *kubeletPatch
    - *kubePrismPatch
    - *nfsPatch
    - *ntpPatch
    - *staticHostEntriesPatch
    - *sysctlPatch
    - *udev
    - *openebs-hostpath
    - *hostdns
