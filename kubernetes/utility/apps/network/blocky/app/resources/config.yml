---
ports:
  dns: 0.0.0.0:53
  http: 0.0.0.0:4000

bootstrapDns:
  - tcp-tls:1.1.1.1:853
  - tcp-tls:1.0.0.1:853

upstreams:
  groups:
    default:
      - tcp-tls:1.1.1.1:853
      - tcp-tls:1.0.0.1:853
    kenna*:
      - tcp-tls:family.cloudflare-dns.com:853

clientLookup:
  upstream: &router 10.0.0.1

conditional:
  fallbackUpstream: false
  mapping:
    internal: *router
    rafaribe.dev: *router
    home.arpa: *router
    rafaribe.casa: *router

customDNS:
  zone: |
    $TTL 3600
    $ORIGIN rafaribe.com.
    ; LAN
    opnsense      IN A      10.0.0.1
    ; Servers
    truenas    IN A      10.0.0.6
    ; CNAME records
    truenas    IN CNAME  truenas.rafaribe.com.
    nas        IN CNAME  truenas.rafaribe.com.

    $TTL 3600
    $ORIGIN rafaribe.casa.
    ; Containers
    traefik    IN A      10.0.1.10
    gatus      IN A      10.0.1.10
    ; CNAME records
    blocky     IN CNAME  traefik.rafaribe.casa.
    status     IN CNAME  traefik.rafaribe.casa.

connectIPVersion: v4

caching:
  minTime: 15m
  prefetching: true
  cacheTimeNegative: -1

ecs:
  useAsClient: true

prometheus:
  enable: true
  path: /metrics

blocking:
  # definition of blacklist groups. Can be external link (http/https) or local file
  denylists:
    ads: # Ref: https://firebog.net
      - https://adaway.org/hosts.txt
      - https://www.sunshine.it/blacklist.txt
      - https://v.firebog.net/hosts/AdguardDNS.txt
      - https://v.firebog.net/hosts/Admiral.txt
      - https://raw.githubusercontent.com/anudeepND/blacklist/master/adservers.txt
      - https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt
      - https://v.firebog.net/hosts/Easylist.txt
      - https://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&showintro=0&mimetype=plaintext
      - https://raw.githubusercontent.com/FadeMind/hosts.extras/master/UncheckyAds/hosts
      - https://raw.githubusercontent.com/bigdargon/hostsVN/master/hosts
      - https://www.github.developerdan.com/hosts/lists/ads-and-tracking-extended.txt
    block: # Ref: https://github.com/buggerman/SwitchBlockerForPiHole
      - https://raw.githubusercontent.com/buggerman/SwitchBlockerForPiHole/master/FullBlock.txt
      - https://raw.githubusercontent.com/buggerman/SwitchBlockerForPiHole/master/Paranoid.txt
      - https://gist.githubusercontent.com/aqualad/61814c4487a5799156e5adf6d2f00392/raw/5a4be2f4aecbfb1e0da50ae9ca4f7060e364e908/BlockPS4Updates
      - https://raw.githubusercontent.com/hagezi/dns-blocklists/main/domains/doh-vpn-proxy-bypass.txt
    extra: # Ref: https://github.com/badmojr/1Hosts
      - https://o0.pages.dev/Lite/domains.txt
    misc: # Ref: https://firebog.net
      - https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwareHosts.txt
      - https://osint.digitalside.it/Threat-Intel/lists/latestdomains.txt
      - https://s3.amazonaws.com/lists.disconnect.me/simple_malvertising.txt
      - https://v.firebog.net/hosts/Prigent-Crypto.txt
      - https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.Risk/hosts
      - https://bitbucket.org/ethanr/dns-blacklists/raw/master/bad_lists/Mandiant_APT1_Report_Appendix_D.txt
      - https://phishing.army/download/phishing_army_blocklist_extended.txt
      - https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-malware.txt
      - https://v.firebog.net/hosts/RPiList-Malware.txt
      - https://v.firebog.net/hosts/RPiList-Phishing.txt
      - https://raw.githubusercontent.com/Spam404/lists/master/main-blacklist.txt
      - https://raw.githubusercontent.com/AssoEchap/stalkerware-indicators/master/generated/hosts
      - https://urlhaus.abuse.ch/downloads/hostfile/
    native: # Ref: https://github.com/hagezi/dns-blocklists
      - https://raw.githubusercontent.com/hagezi/dns-blocklists/main/domains/native.huawei.txt
      - https://raw.githubusercontent.com/hagezi/dns-blocklists/main/domains/native.lgwebos.txt
      - https://raw.githubusercontent.com/hagezi/dns-blocklists/main/domains/native.tiktok.extended.txt
      - https://perflyst.github.io/PiHoleBlocklist/SmartTV.txt
    normal: # Ref: https://github.com/hagezi/dns-blocklists
      - https://raw.githubusercontent.com/hagezi/dns-blocklists/main/domains/multi.txt
    other: # Ref: https://firebog.net
      - https://zerodot1.gitlab.io/CoinBlockerLists/hosts_browser
    pro: # Ref: https://github.com/hagezi/dns-blocklists
      - https://raw.githubusercontent.com/hagezi/dns-blocklists/main/domains/pro.txt
    suspicious: # Ref: https://firebog.net
      - https://raw.githubusercontent.com/PolishFiltersTeam/KADhosts/master/KADhosts.txt
      - https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.Spam/hosts
      - https://v.firebog.net/hosts/static/w3kbl.txt
      - https://raw.githubusercontent.com/RPiList/specials/master/Blocklisten/notserious
      - https://s3.amazonaws.com/lists.disconnect.me/simple_malware.txt
    tif: # Ref: https://github.com/hagezi/dns-blocklists
      - https://raw.githubusercontent.com/hagezi/dns-blocklists/main/domains/tif.txt
    trackers: # Ref: https://firebog.net
      - https://v.firebog.net/hosts/Easyprivacy.txt
      - https://v.firebog.net/hosts/Prigent-Ads.txt
      - https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.2o7Net/hosts
      - https://raw.githubusercontent.com/crazy-max/WindowsSpyBlocker/master/data/hosts/spy.txt
      - https://hostfiles.frogeye.fr/firstparty-trackers-hosts.txt
      - https://s3.amazonaws.com/lists.disconnect.me/simple_tracking.txt
    ultimate: # Ref: https://github.com/hagezi/dns-blocklists
      - https://raw.githubusercontent.com/hagezi/dns-blocklists/main/domains/ultimate.txt

  # definition of allowlist groups.
  # Note: if the same group has both allow/denylists, allowlists take precedence. Meaning if a domain is both blocked and allowed, it will be allowed.
  # If a group has only allowlist entries, only domains from this list are allowed, and all others be blocked.
  allowlists:
    ads: &whiteList
      - https://raw.githubusercontent.com/anudeepND/whitelist/master/domains/whitelist.txt
      - https://raw.githubusercontent.com/drag0n141/Lists-AdGuard-or-Pihole/master/Whitelists/whitelist.txt
      # - |
      #   *.wcacloudapi.net
    block: []
    extra: *whiteList
    misc: *whiteList
    native: []
    normal: *whiteList
    other: *whiteList
    pro: *whiteList
    suspicious: *whiteList
    tif: *whiteList
    trackers: *whiteList
    ultimate: *whiteList
  # definition: which groups should be applied for which client
  clientGroupsBlock:
    default:
      - ads
      - block
      - extra
      - misc
      - native
      - normal
      - other
      - pro
      - suspicious
      - tif
      - trackers
  # which response will be sent, if query is blocked:
  # zeroIp: 0.0.0.0 will be returned (default)
  # nxDomain: return NXDOMAIN as return code
  # comma separated list of destination IP addresses (for example: 192.100.100.15, 2001:0db8:85a3:08d3:1319:8a2e:0370:7344). Should contain ipv4 and ipv6 to cover all query types. Useful with running web server on this address to display the "blocked" page.
  blockType: zeroIp

  # optional: TTL for answers to blocked domains
  # default: 6h
  blockTTL: 1m

  # optional: Configure how lists, AKA sources, are loaded
  loading:
    # optional: list refresh period in duration format.
    # Set to a value <= 0 to disable.
    # default: 4h
    refreshPeriod: 12h

    # optional: Applies only to lists that are downloaded (HTTP URLs).
    downloads:
      # optional: timeout for list download (each url). Use large values for big lists or slow internet connections
      # default: 5s
      timeout: 60s
      # optional: Maximum download attempts
      # default: 3
      attempts: 3
      # optional: Time between the download attempts
      # default: 500ms
      cooldown: 500ms

    # optional: Maximum number of lists to process in parallel.
    # default: 4
    concurrency: 16

    # Configure startup behavior.
    # accepted: blocking, failOnError, fast
    # default: blocking
    strategy: failOnError

    # Number of errors allowed in a list before it is considered invalid.
    # A value of -1 disables the limit.
    # default: 5
    maxErrorsPerSource: -1

# optional: configuration for caching of DNS responses
caching:
  # duration how long a response must be cached (min value).
  # If <=0, use response's TTL, if >0 use this value, if TTL is smaller
  # Default: 0
  minTime: 15m
  # duration how long a response must be cached (max value).
  # If <0, do not cache responses
  # If 0, use TTL
  # If > 0, use this value, if TTL is greater
  # Default: 0
  maxTime: 30m
  # Max number of cache entries (responses) to be kept in cache (soft limit). Useful on systems with limited amount of RAM.
  # Default (0): unlimited
  maxItemsCount: 0
  # if true, will preload DNS results for often used queries (default: names queried more than 5 times in a 2-hour time window)
  # this improves the response time for often used queries, but significantly increases external traffic
  # default: false
  prefetching: true
  # prefetch track time window (in duration format)
  # default: 120
  prefetchExpires: 2h
  # name queries threshold for prefetch
  # default: 5
  prefetchThreshold: 5
  # Max number of domains to be kept in cache for prefetching (soft limit). Useful on systems with limited amount of RAM.
  # Default (0): unlimited
  prefetchMaxItemsCount: 0
  # Time how long negative results (NXDOMAIN response or empty result) are cached. A value of -1 will disable caching for negative results.
  # Default: 30m
  cacheTimeNegative: 30m

# optional: configuration of client name resolution
clientLookup:
  # optional: this DNS resolver will be used to perform reverse DNS lookup (typically local router)
  upstream: *upstream
  # optional: some routers return multiple names for client (host name and user defined name). Define which single name should be used.
  # Example: take second name if present, if not take first name
  singleNameOrder:
    - 2
    - 1
  # optional: custom mapping of client name to IP addresses. Useful if reverse DNS does not work properly or just to have custom client names.
  # clients:
    # laptop:
      # - 192.168.178.29
# optional: configuration for prometheus metrics endpoint
prometheus:
  # enabled if true
  enable: true
  # url path, optional (default '/metrics')
  path: /metrics
    

minTlsServeVersion: 1.3

# if https port > 0: path to cert and key file for SSL encryption. if not set, self-signed certificate will be generated
#certFile: server.crt
#keyFile: server.key

# optional: use these DNS servers to resolve denylist urls and upstream DNS servers. It is useful if no system DNS resolver is configured, and/or to encrypt the bootstrap queries.
bootstrapDns:
  - upstream: tcp-tls:family.cloudflare-dns.com
    ips:
      - 1.1.1.3
      - 1.0.0.3
  - upstream: tcp-tls:1dot1dot1dot1.cloudflare-dns.com
    ips:
      - 1.1.1.1
      - 1.0.0.1
  - upstream: tcp-tls:dns.quad9.net
    ips:
      - 9.9.9.9
      - 149.112.112.112

# optional: drop all queries with following query types. Default: empty
# filtering:
#   queryTypes:
#     - AAAA

# optional: return NXDOMAIN for queries that are not FQDNs.
# fqdnOnly:
#   # default: false
#   enable: true

# optional: if path defined, use this file for query resolution (A, AAAA and rDNS). Default: empty
# hostsFile:
  # optional: Hosts files to parse
  # sources:
    # - /etc/hosts
    # - https://example.com/hosts
    # - |
      # inline hosts
      # 127.0.0.1 example.com
  # optional: TTL, default: 1h
  # hostsTTL: 30m
  # optional: Whether loopback hosts addresses (127.0.0.0/8 and ::1) should be filtered or not
  # default: false
  # filterLoopback: true
  # optional: Configure how sources are loaded
  # loading:
    # optional: file refresh period in duration format.
    # Set to a value <= 0 to disable.
    # default: 4h
    # refreshPeriod: 24h
    # optional: Applies only to files that are downloaded (HTTP URLs).
    # downloads:
      # optional: timeout for file download (each url). Use large values for big files or slow internet connections
      # default: 5s
      # timeout: 60s
      # optional: Maximum download attempts
      # default: 3
      # attempts: 5
      # optional: Time between the download attempts
      # default: 500ms
      # cooldown: 10s
    # optional: Maximum number of files to process in parallel.
    # default: 4
    # concurrency: 16
    # Configure startup behavior.
    # accepted: blocking, failOnError, fast
    # default: blocking
    # strategy: failOnError
    # Number of errors allowed in a file before it is considered invalid.
    # A value of -1 disables the limit.
    # default: 5
    # maxErrorsPerSource: 5

# optional: ports configuration
ports:
  # optional: DNS listener port(s) and bind ip address(es), default 53 (UDP and TCP). Example: 53, :53, "127.0.0.1:5353,[::1]:5353"
  dns: 53
  # optional: Port(s) and bind ip address(es) for DoT (DNS-over-TLS) listener. Example: 853, 127.0.0.1:853
  tls: 853
  # optional: Port(s) and optional bind ip address(es) to serve HTTPS used for prometheus metrics, pprof, REST API, DoH... If you wish to specify a specific IP, you can do so such as 192.168.0.1:443. Example: 443, :443, 127.0.0.1:443,[::1]:443
  https: 443
  # optional: Port(s) and optional bind ip address(es) to serve HTTP used for prometheus metrics, pprof, REST API, DoH... If you wish to specify a specific IP, you can do so such as 192.168.0.1:4000. Example: 4000, :4000, 127.0.0.1:4000,[::1]:4000
  http: 4000

# optional: logging configuration
log:
  # optional: Log level (one from debug, info, warn, error). Default: info
  level: debug
  # optional: Log format (text or json). Default: text
  format: json
  # optional: log timestamps. Default: true
  timestamp: true
  # optional: obfuscate log output (replace all alphanumeric characters with *) for user sensitive data like request domains or responses to increase privacy. Default: false
  privacy: false

# optional: add EDE error codes to dns response
# ede:
  # enabled if true, Default: false
  # enable: true

# optional: configure optional Special Use Domain Names (SUDN)
# specialUseDomains:
  # optional: block recomended private TLDs
  # default: true
  # rfc6762-appendixG: true

# optional: configure extended client subnet (ECS) support
ecs:
  # optional: if the request ecs option with a max sice mask the address will be used as client ip
  useAsClient: true
  # optional: if the request contains a ecs option it will be forwarded to the upstream resolver
  # forward: true