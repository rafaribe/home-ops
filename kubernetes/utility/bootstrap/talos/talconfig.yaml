---
# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
clusterName: &cluster ${clusterName}
endpoint: "https://${clusterEndpointIP}:6443"

clusterPodNets:
  - 10.44.0.0/16
clusterSvcNets:
  - 10.45.0.0/16

# renovate: depName=ghcr.io/siderolabs/installer datasource=docker
talosVersion: v1.9.0
# renovate: depName=ghcr.io/siderolabs/kubelet datasource=docker
kubernetesVersion: v1.32.0

additionalApiServerCertSans: &sans
  - ${clusterEndpointIP}
  - ${clusterName}.${clusterDNSSuffix}
  - 127.0.0.1 # KubePrism
  - "*.${clusterDNSSuffix}"

additionalMachineCertSans: *sans

cniConfig:
  name: none

nodes:
  - hostname: srv-01.${clusterDNSSuffix}
    ipAddress: 10.0.0.3
    nameservers:
      - "10.0.0.254"
    controlPlane: true
    installDiskSelector:
      wwid: naa.5002538d7025e8be
      type: ssd
      size: <= 256 GB
    machineDisks:
      - device: /dev/disk/by-id/ata-HGST_HTS721075A9E630_JR12006QG0YW5E
        partitions:
          - mountpoint: /var/lib/csi-local-hostpath
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "10:c3:7b:1d:d6:f4"
        dhcp: true
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: 10.0.0.1
    kernelModules:
      - name: zfs
controlPlane:
  noSchematicValidate: true
  schematic:
    customization:
      extraKernelArgs:
        - net.ifnames=0
        - mitigations=off
      systemExtensions:
        officialExtensions:
          - siderolabs/binfmt-misc
          - siderolabs/btrfs
          - siderolabs/fuse3
          - siderolabs/i915
          - siderolabs/intel-ucode
          - siderolabs/mei
          - siderolabs/nonfree-kmod-nvidia-production
          - siderolabs/nvidia-open-gpu-kernel-modules-production
          - siderolabs/realtek-firmware
          - siderolabs/stargz-snapshotter
          - siderolabs/util-linux-tools
          - siderolabs/zfs
  nodeLabels:
    topology.kubernetes.io/region: *cluster
    topology.kubernetes.io/zone: m
  patches:
    # set all disks to no scheduler and allow usb disks to be handled by rook/ceph
    - &udev |-
      machine:
        udev:
          rules:
            # set all disks to `none` scheduler (optimal setting for Ceph and ZFS)
            - SUBSYSTEM=="block", ENV{DEVTYPE}=="disk", ATTR{queue/scheduler}="none"
            # allow GID 44 (video) to use Intel GPU
            #- SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
            - SUBSYSTEM=="drm", GROUP="44", MODE="0660"
            # Allow ceph to recognize usb devices as scsi via udev custom rules
            # https://github.com/rook/rook/issues/14699#issuecomment-2350953135
            - ACTION=="add", ENV{ID_TYPE}=="disk", ENV{ID_BUS}=="usb", ENV{ID_BUS}="scsi"
            - ACTION=="change", ENV{ID_TYPE}=="disk", ENV{ID_BUS}=="usb", ENV{ID_BUS}="scsi"
            - ACTION=="online", ENV{ID_TYPE}=="disk", ENV{ID_BUS}=="usb", ENV{ID_BUS}="scsi"
    # Configure containerd
    - &containerdPatch |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |-
              [plugins."io.containerd.grpc.v1.cri"]
                enable_unprivileged_ports = true
                enable_unprivileged_icmp = true
              [plugins."io.containerd.grpc.v1.cri".containerd]
                discard_unpacked_layers = false
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                discard_unpacked_layers = false

    # Disable search domain everywhere
    - &disableSearchDomainPatch |-
      machine:
        network:
          disableSearchDomain: true

    # Enable cluster discovery
    - &discoveryPatch |-
      cluster:
        discovery:
          registries:
            kubernetes:
              disabled: false
            service:
              disabled: true

    # Configure kubelet
    - &kubeletPatch |-
      machine:
        kubelet:
          extraArgs:
            rotate-server-certificates: true
          nodeIP:
            validSubnets:
              - 10.0.0.0/22

    # Enable KubePrism
    - &kubePrismPatch |-
      machine:
        features:
          kubePrism:
            enabled: true
            port: 7445

    # Configure NFS mount options
    - &nfsPatch |-
      machine:
        files:
          - op: overwrite
            path: /etc/nfsmount.conf
            permissions: 0o644
            content: |
              [ NFSMount_Global_Options ]
              nfsvers=4.2
              hard=True
              noatime=True
              nodiratime=True
              rsize=131072
              wsize=131072
              nconnect=8

    # Configure NTP
    - &ntpPatch |-
      machine:
        time:
          disabled: false
          servers:
            - time.cloudflare.com

    # Static host entries
    - &staticHostEntriesPatch |-
      machine:
        network:
          extraHostEntries:
            - ip: ${clusterEndpointIP}
              aliases:
                - shared.${clusterDNSSuffix}

    # Custom sysctl settings
    - &sysctlPatch |-
      machine:
        sysctls:
          fs.inotify.max_user_instances: 8192    # Watchdog
          fs.inotify.max_user_watches: 1048576   # Watchdog
          kernel.randomize_va_space: 0
          net.core.netdev_max_backlog: 30000
          net.core.rmem_max: 67108864            # Cloudflared / QUIC
          net.core.wmem_max: 67108864            # Cloudflared / QUIC
          net.ipv4.tcp_rmem: 4096 87380 33554432
          net.ipv4.tcp_wmem: 4096 65536 33554432
          net.ipv4.tcp_tw_reuse: 1
          net.ipv4.tcp_window_scaling: 1

    # Cluster configuration
    - |-
      cluster:
        allowSchedulingOnMasters: true
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
        coreDNS:
          disabled: true
        proxy:
          disabled: true
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0

    # ETCD configuration
    - |-
      cluster:
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
          advertisedSubnets:
            - 10.0.0.0/22

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:admin
            allowedKubernetesNamespaces:
              - kube-system
              - system
              - system-upgrade
    # Mount openebs-hostpath in kubelet
    - &openebs-hostpath |-
      machine:
        kubelet:
          extraMounts:
            - destination: /var/openebs/local
              type: bind
              source: /var/openebs/local
              options: ["bind", "rshared", "rw"]

    # Mount Democratic CSI Storage in Kubelet
    - |-
      machine:
        kubelet:
          extraMounts:
            - destination: /var/lib/csi-local-hostpath
              type: bind
              source: /var/lib/csi-local-hostpath
              options: ["bind", "rshared", "rw"]

    # Enable hostDNS:
    - &hostdns |-
      machine:
        features:
          hostDNS:
            enabled: true
            forwardKubeDNSToHost: false
            resolveMemberNames: true
