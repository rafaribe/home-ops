---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kromgo
spec:
  chartRef:
    kind: OCIRepository
    name: kromgo
  interval: 1h
  values:
    controllers:
      kromgo:
        replicas: 1
        strategy: RollingUpdate

        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: kromgo

        containers:
          kromgo:
            image:
              repository: ghcr.io/kashalls/kromgo
              tag: v0.7.1
            env:
              PROMETHEUS_URL: http://prometheus-operated.observability.svc.cluster.local:9090
              SERVER_HOST: 0.0.0.0
              SERVER_PORT: &port 8080
              HEALTH_HOST: 0.0.0.0
              HEALTH_PORT: &hport 8888
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /readyz
                    port: *hport
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - "ALL"
            resources:
              requests:
                cpu: 5m
                memory: 10M
              limits:
                memory: 64M

    service:
      app:
        controller: kromgo
        ports:
          http:
            primary: true
            port: *port
          health:
            port: *hport
    route:
      app:
        annotations:

        hostnames:
          - "{{ .Release.Name }}.rafaribe.com"
        parentRefs:
          - name: envoy-internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    persistence:
      config-file:
        type: configMap
        name: kromgo-config
        globalMounts:
          - path: /kromgo/config.yaml
            subPath: config.yaml
            readOnly: true
    configMaps:
      config:
        metadata:
          name: kromgo-config
        data:
          config.yaml: |
            badge:
              font: Verdana.ttf
              size: 12

            metrics:
              - name: talos_version
                query: node_os_info{name="Talos"}
                label: version_id
                title: Talos

              - name: kubernetes_version
                query: kubernetes_build_info{cluster="main"}
                label: git_version
                title: Kubernetes

              - name: cluster_node_count
                query: count(count by (node) (kube_node_status_condition{condition="Ready"}))
                colors:
                  - { color: "green", min: 0, max: 9999 }
                title: Nodes

              - name: cluster_pod_count
                query: sum(kube_pod_status_phase{phase="Running"})
                colors:
                  - { color: "green", min: 0, max: 9999 }
                title: Pods

              - name: cluster_cpu_usage
                query: round(avg(instance:node_cpu_utilisation:rate5m) * 100, 0.1)
                suffix: "%"
                colors:
                  - { color: "green", min: 0, max: 35 }
                  - { color: "orange", min: 36, max: 75 }
                  - { color: "red", min: 76, max: 9999 }
                title: CPU

              - name: cluster_memory_usage
                query: round(sum(node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / sum(node_memory_MemTotal_bytes) * 100, 0.1)
                suffix: "%"
                colors:
                  - { color: green, min: 0, max: 35 }
                  - { color: orange, min: 36, max: 75 }
                  - { color: red, min: 76, max: 9999 }
                title: Memory

              - name: cluster_age_days
                query: round((time() - min(kube_node_created) ) / 86400)
                suffix: "d"
                colors:
                  - { color: "green", min: 0, max: 180 }
                  - { color: "orange", min: 181, max: 360 }
                  - { color: "red", min: 361, max: 9999 }
                title: Age

              - name: cluster_uptime_days
                query: round(avg(node_time_seconds - node_boot_time_seconds) / 86400)
                suffix: "d"
                colors:
                  - { color: "green", min: 0, max: 180 }
                  - { color: "orange", min: 181, max: 360 }
                  - { color: "red", min: 361, max: 9999 }
                title: Uptime
