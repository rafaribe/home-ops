---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: paperless
  namespace: services
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.3.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    initContainers:
      init-db:
        image: ghcr.io/onedr0p/postgres-initdb:14.8@sha256:0141cf427c47f2d534711a3f9e8c5f9008bc6b585463ccd9288cf0f027e20deb
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: *app
    image:
      repository: ghcr.io/paperless-ngx/paperless-ngx
      tag: 1.16.5
    env:
      COMPOSE_PROJECT_NAME: paperless
      PAPERLESS_CONSUMER_POLLING: "60"
      PAPERLESS_CONSUMER_RECURSIVE: "true"
      PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
      PAPERLESS_ENABLE_HTTP_REMOTE_USER: "true"
      PAPERLESS_OCR_LANGUAGES: por eng
      PAPERLESS_OCR_LANGUAGE: por
      PAPERLESS_TIME_ZONE: Europe/Lisbon
      PAPERLESS_REDIS: redis://paperless-redis.selfhosted.svc.cluster.local:6379
      PAPERLESS_ADMIN_USER: ${SECRET_PAPERLESS_USERNAME}
      PAPERLESS_ADMIN_PASSWORD: ${SECRET_PAPERLESS_PASSWORD}
      PAPERLESS_URL: https://paperless.${EXTERNAL_DOMAIN}
      PAPERLESS_PORT: 8000
      USERMAP_UID: 1000
      USERMAP_GID: 1000
    data:
      enabled: true
      size: 10Gi
      accessModes:
        - ReadWriteOnce
      media:
        enabled: true
        size: 10Gi
        accessModes:
          - ReadWriteOnce
    postgresql:
      enabled: false
    service:
      main:
        ports:
          http:
            port: 8000
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns.alpha.kubernetes.io/hostname: paperless.${EXTERNAL_DOMAIN}

        hosts:
          - host: &host "paperless.${EXTERNAL_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: "paperless-tls"
    persistence:
      data:
        enabled: true
        mountPath: /usr/src/paperless/data
        type: nfs
        server: "${NAS_ADDRESS}"
        path: ${NAS_DIR}/paperless/data
      media:
        enabled: true
        mountPath: /usr/src/paperless/media
        type: nfs
        server: "${NAS_ADDRESS}"
        path: ${NAS_DIR}/paperless/media
      consume:
        enabled: true
        mountPath: ${NAS_DIR}/paperless/consume
        type: nfs
        server: "${NAS_ADDRESS}"
        path: ${NAS_DIR}/paperless/incoming
      export:
        enabled: true
        mountPath: /usr/src/paperless/export
        type: nfs
        server: "${NAS_ADDRESS}"
        path: ${NAS_DIR}/paperless/export
    resources:
      requests:
        cpu: 23m
        memory: 2975M
      limits:
        memory: 6572M
    sidecars:
      redis:
        name: redis
        image: public.ecr.aws/docker/library/redis:7.0.12@sha256:b0bdc1a83caf43f9eb74afca0fcfd6f09bea38bb87f6add4a858f06ef4617538
        imagePullPolicy: IfNotPresent
      gotenburg:
        name: gotenburg
        image: thecodingmachine/gotenberg:7.9.1@sha256:a4bfa7a2b6d3ee95fbc8a28050d36bfe2992b10e85ec51de86f23417c6b4fbbb
        env:
          - name: DISABLE_GOOGLE_CHROME
            value: "1"
      tika:
        image: ghcr.io/paperless-ngx/tika:2.8.0-full@sha256:a9c9c6d5c925f4ad9660e66368801e3166f309a3a2c7514cc17c4b470f239849
        name: tika
        imagePullPolicy: Always
