---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app media-browser-quantum
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      media-browser-quantum:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/gtsteffaniak/filebrowser
              tag: 0.8.7-beta@sha256:3c78dbf6bb937d4f8564f2ae67795ba342a44e53bdc318630b688a8dab9488f9
            env:
              TZ: "Europe/Lisbon"
              FILEBROWSER_PORT: "80"
              FILEBROWSER_DATABASE: "/config/filebrowser.db"
              FILEBROWSER_ROOT: "/media"
              FILEBROWSER_LOG: "stdout"
              FILEBROWSER_CONFIG: "/app/config.yaml"
              FILEBROWSER_AUTH_METHOD: "oidc"
              FILEBROWSER_OIDC_ISSUER: "https://sso.rafaribe.com/application/o/filebrowser/"
              FILEBROWSER_OIDC_REDIRECT_URL: "https://mbq.rafaribe.com/auth/oidc/callback"
              FILEBROWSER_OIDC_SCOPES: "openid,profile,email"
              FILEBROWSER_OIDC_AUTO_CREATE_USER: "true"
              FILEBROWSER_BRANDING_NAME: "Media Browser"
            envFrom:
              - secretRef:
                  name: *app
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 80
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 512Mi

        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"

    service:
      app:
        controller: media-browser-quantum
        ports:
          http:
            port: *port

    route:
      app:
        annotations:
          hajimari.io/icon: mdi:folder-play-outline
        hostnames: ["mbq.rafaribe.com"]
        parentRefs:
          - name: envoy-internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    configMaps:
      config:
        data:
          config.yaml: |
            port: 80
            database: /config/filebrowser.db
            root: /media
            log: stdout
            auth:
              method: oidc
              oidc:
                issuer: https://sso.rafaribe.com/application/o/filebrowser/
                redirect_url: https://media.rafaribe.com/auth/oidc/callback
                scopes:
                  - openid
                  - profile
                  - email
                auto_create_user: true
            branding:
              name: Media Browser

    persistence:
      config:
        existingClaim: quantum
        globalMounts:
          - path: /config
      
      config-file:
        type: configMap
        name: media-browser-quantum
        globalMounts:
          - path: /app/config.yaml
            subPath: config.yaml
            readOnly: true
      
      media:
        type: nfs
        server: truenas.rafaribe.com
        path: /mnt/tank/media
        globalMounts:
          - path: /media
      
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp