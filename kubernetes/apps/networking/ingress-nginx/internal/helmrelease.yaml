---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: ingress-nginx-internal
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: ingress-nginx
      version: 4.8.3
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
  values:
    fullnameOverride: internal-nginx

    controller:
      replicaCount: 3
      extraEnvs:
        - name: TZ
          value: "${TZ}"
      updateStrategy:
        type: RollingUpdate

      allowSnippetAnnotations: true
      enableAnnotationValidations: true

      service:
        enabled: true
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: ${LB_NGINX_INTERNAL}
          external-dns.alpha.kubernetes.io/hostname: "ingress-int.rafaribe.com"
        labels:
          pool: lb
        externalTrafficPolicy: Cluster

      publishService:
        enabled: true

      ingressClassResource:
        name: internal-nginx
        default: false
        controllerValue: k8s.io/ingress-nginx-internal

      admissionWebhooks:
        objectSelector:
          matchExpressions:
            - key: ingress-class
              operator: In
              values:
                - internal-nginx
      config:
        block-user-agents: "GPTBot,~*GPTBot*,ChatGPT-User,~*ChatGPT-User*,Google-Extended,~*Google-Extended*,CCBot,~*CCBot*,Omgilibot,~*Omgilibot*,FacebookBot,~*FacebookBot*" # taken from https://github.com/superseriousbusiness/gotosocial/blob/main/internal/web/robots.go
        client-header-timeout: 120
        client-body-buffer-size: "100M"
        client-body-timeout: 120
        enable-brotli: "true"
        enable-ocsp: "true"
        enable-real-ip: "true"
        hide-headers: Server,X-Powered-By
        hsts-max-age: "31449600"
        keep-alive: 120
        keep-alive-requests: 10000
        log-format-escape-json: "true"
        log-format-upstream: >
          {"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr",
          "x_forwarded_for": "$proxy_add_x_forwarded_for", "request_id": "$req_id",
          "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time,
          "status": $status, "vhost": "$host", "request_proto": "$server_protocol",
          "path": "$uri", "request_query": "$args", "request_length": $request_length,
          "duration": $request_time,"method": "$request_method", "http_referrer": "$http_referer",
          "http_user_agent": "$http_user_agent"}
        proxy-body-size: 0
        proxy-buffer-size: "16k"
        ssl-protocols: "TLSv1.3 TLSv1.2"
        use-forwarded-headers: "true"

      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: networking
          namespaceSelector:
            any: true

      extraArgs:
        default-ssl-certificate: "networking/wildcard-default-certificate-tls"

    defaultBackend:
      enabled: false

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values: ["ingress-nginx"]
                    - key: app.kubernetes.io/component
                      operator: In
                      values: ["default-backend"]
                topologyKey: kubernetes.io/hostname
