---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sparkyfitness
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: app-template
      version: 4.1.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      server:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5@sha256:e0c87ce7df39d06b93f27cf2cc6a056611f13faaa88cc07ab4dc8bf7a85d0b11
            envFrom: &envFrom
              - secretRef:
                  name: *app

        containers:
          app:
            image:
              repository: codewithcj/sparkyfitness_server
              tag: v0.14.9
            envFrom: *envFrom
            env:
              SPARKY_FITNESS_SERVER_HOST: "0.0.0.0"
              SPARKY_FITNESS_SERVER_PORT: &server-port 3010
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *server-port
                  initialDelaySeconds: 60
                  periodSeconds: 30
                  timeoutSeconds: 10
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *server-port
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *server-port
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 30
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 512Mi

      frontend:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: codewithcj/sparkyfitness
              tag: v0.14.9
            env:
              TZ: Europe/Lisbon
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &frontend-port 80
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *frontend-port
                  initialDelaySeconds: 5
                  periodSeconds: 5
                  timeoutSeconds: 3
                  failureThreshold: 3
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *frontend-port
                  initialDelaySeconds: 10
                  periodSeconds: 5
                  timeoutSeconds: 3
                  failureThreshold: 20
            resources:
              requests:
                cpu: 50m
                memory: 128Mi
              limits:
                memory: 256Mi
            securityContext:
              runAsUser: 0
              runAsGroup: 0
              runAsNonRoot: false

    defaultPodOptions:
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      server:
        controller: server
        ports:
          http:
            port: *server-port
      frontend:
        controller: frontend
        primary: true
        ports:
          http:
            port: *frontend-port

    route:
      app:
        annotations:
          gethomepage.dev/href: "https://sparkyfitness.rafaribe.com"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/app: SparkyFitness
          gethomepage.dev/group: Home
          gethomepage.dev/icon: mdi-dumbbell
          gethomepage.dev/name: SparkyFitness
          gethomepage.dev/description: Self-hosted fitness tracking alternative to MyFitnessPal
          gethomepage.dev/siteMonitor: &url http://sparkyfitness-frontend.home:80
        hostnames: ["sparkyfitness.rafaribe.com"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: sparkyfitness-frontend
                port: *frontend-port

    persistence:
      data:
        existingClaim: *app
        advancedMounts:
          server:
            app:
              - path: /app/data
                subPath: server-data
      nginx-config:
        type: configMap
        name: sparkyfitness
        defaultMode: 0644
        advancedMounts:
          frontend:
            app:
              - path: /etc/nginx/conf.d/default.conf
                subPath: default.conf

    configMaps:
      nginx-config:
        data:
          default.conf: |
            upstream sparkyfitness-server {
                server sparkyfitness-server.home.svc.cluster.local:3010;
            }

            server {
                listen 80;
                server_name localhost;
                
                # Frontend static files
                location / {
                    root /usr/share/nginx/html;
                    index index.html index.htm;
                    try_files $uri $uri/ /index.html;
                }
                
                # API proxy to backend
                location /api/ {
                    proxy_pass http://sparkyfitness-server/;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                    proxy_connect_timeout 60s;
                    proxy_send_timeout 60s;
                    proxy_read_timeout 60s;
                }
                
                # Health check endpoint
                location /health {
                    access_log off;
                    return 200 "healthy\n";
                    add_header Content-Type text/plain;
                }
                
                # Error pages
                error_page 500 502 503 504 /50x.html;
                location = /50x.html {
                    root /usr/share/nginx/html;
                }
            }
