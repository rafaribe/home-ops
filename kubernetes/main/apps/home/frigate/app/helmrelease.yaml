---
# yaml-language-server: $schema=https://kubernetes-schemas.thesteamedcrab.com/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: frigate
  namespace: home
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  maxHistory: 3

  install:
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:
    controllers:
      main:
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          priorityClassName: home-cluster-critical

          annotations:
            k8s.v1.cni.cncf.io/networks: frigate-security-static

            #podAntiAffinity:
            #  requiredDuringSchedulingIgnoredDuringExecution:
            #    - labelSelector:
            #        matchExpressions:
            #          - key: app.kubernetes.io/name
            #            operator: In
            #            values: ["jellyfin", "ollama", "localai"]
            #      topologyKey: kubernetes.io/hostname

          nodeSelector:
            google.feature.node.kubernetes.io/coral-usb: "true"
            intel.feature.node.kubernetes.io/gpu: "true"
            node.network/vlan-security: "true"

        containers:
          main:
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: 0.14.0-beta3

            env:
              TZ: ${TIMEZONE}
              LIBVA_DRIVER_NAME: i965

            envFrom:
              - secretRef:
                  name: frigate

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: &unsecurePort 5000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: *unsecurePort
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 30

            securityContext:
              privileged: true
              capabilities:
                add:
                  - NET_ADMIN
                  - NET_RAW

            resources:
              requests:
                gpu.intel.com/i915: "1"
                cpu: 1600m
                memory: 9Gi
              limits:
                gpu.intel.com/i915: "1"
                memory: 9Gi

        statefulset:
          volumeClaimTemplates:
            - name: config
              accessMode: ReadWriteOnce
              size: 5Gi
              storageClass: ceph-block
              globalMounts:
                - path: /data

    service:
      main:
        controller: main
        ports:
          http:
            port: &httpPort 8080
          rtsp:
            port: 8554
          go2rtc-tcp:
            enabled: true
            primary: false
            port: 8555
            protocol: TCP
            targetPort: 8555
          go2rtc-udp:
            enabled: true
            primary: false
            port: 8555
            protocol: UDP
            targetPort: 8555
          unsecure:
            port: *unsecurePort

    ingress:
      main:
        className: internal
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: "Security Cameras"
          hajimari.io/icon: mdi:cctv
          hajimari.io/group: "security"
          hajimari.io/instance: "user,admin"
          external-dns.alpha.kubernetes.io/target: internal.rafaribe.com
        hosts:
          - host: &host "frigate.rafaribe.com"
            paths:
              - path: /
                service:
                  identifier: main
                  port: *httpPort

    persistence:
      config-file:
        type: configMap
        name: frigate-config
        globalMounts:
          - path: /config/config.yml
            subPath: config.yml
          - path: /config/.version
            subPath: version

      media:
        enabled: true
        existingClaim: frigate

      cache:
        type: emptyDir
        medium: Memory
        sizeLimit: 4Gi
        globalMounts:
          - path: /dev/shm

      # usb:
      #   type: hostPath
      #   hostPath: /dev/bus/usb
      #   hostPathType: Directory
      #   advancedMounts:
      #     main:
      #       main:
      #         - path: /dev/bus/usb
