---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.32.0/mutatingadmissionpolicybinding-admissionregistration-v1alpha1.json
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: MutatingAdmissionPolicyBinding
metadata:
  name: cnpg-immich-nfs
spec:
  policyName: cnpg-immich-nfs
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.32.0/mutatingadmissionpolicy-admissionregistration-v1alpha1.json
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: MutatingAdmissionPolicy
metadata:
  name: cnpg-immich-nfs
spec:
  matchConstraints:
    resourceRules:
      - apiGroups: [""]
        apiVersions: ["v1"]
        operations: ["CREATE", "UPDATE"]
        resources: ["pods"]
  matchConditions:
    - name: is-cnpg-immich-pod
      expression: >
        object.metadata.labels["cnpg.io/cluster"] == "immich-db"
    - name: is-in-home-namespace
      expression: >
        object.metadata.namespace == "home"
    - name: nfs-backup-volume-does-not-exist
      expression: >
        !object.spec.volumes.exists(item, item.name == "nfs-backup-volume")
  failurePolicy: Fail
  reinvocationPolicy: IfNeeded
  mutations:
    - patchType: JSONPatch
      jsonPatch:
        expression: >
          [
            JSONPatch{
              op: "add", path: "/spec/containers/0/volumeMounts/-",
              value: Object.spec.containers.volumeMounts{
                name: "nfs-backup-volume",
                mountPath: "/nfs-backups"
              }
            },
            JSONPatch{
              op: "add", path: "/spec/volumes/-",
              value: Object.spec.volumes{
                name: "nfs-backup-volume",
                nfs: Object.spec.volumes.nfs{
                  server: "truenas.rafaribe.com",
                  path: "/mnt/storage-0/volsync/immich-db-backups"
                }
              }
            }
          ]
