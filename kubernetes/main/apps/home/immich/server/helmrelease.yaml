---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich-server
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.0.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      immich:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom:
              - secretRef:
                  name: immich-db
          02-init-extensions:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5.0
              pullPolicy: IfNotPresent
            env:
              - name: PGDATABASE
                value: immich
              - name: PGUSER
                value: postgres
              - name: PGPASSWORD
                valueFrom:
                  secretKeyRef:
                    name: immich-db
                    key: INIT_POSTGRES_SUPER_PASS
              - name: PGHOST
                valueFrom:
                  secretKeyRef:
                    name: immich-db
                    key: DB_HOSTNAME
              - name: PGPORT
                valueFrom:
                  secretKeyRef:
                    name: immich-db
                    key: DB_PORT
            envFrom:
              - secretRef:
                  name: immich-db
            command:
              - /bin/bash
              - -c
              - |
                psql <<'EOF'
                  CREATE EXTENSION IF NOT EXISTS "vectors";
                  CREATE EXTENSION IF NOT EXISTS "cube";
                  CREATE EXTENSION IF NOT EXISTS "earthdistance";
                EOF
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.134.0
            env:
              TZ: "Europe/Lisbon"
              IMMICH_LOG_LEVEL: verbose
              # IMMICH_WORKERS_INCLUDE: api
              IMMICH_MEDIA_LOCATION: &mediaLocation /usr/src/app/upload
              IMMICH_PORT: &port 2283
            envFrom:
              - configMapRef:
                  name: immich
              - secretRef:
                  name: immich
              - secretRef:
                  name: immich-db
            probes:
              liveness: &probes
                enabled: false
              readiness: *probes
              startup: *probes
            resources:
              requests:
                cpu: 100m
                memory: 150Mi
              limits:
                memory: 6Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
        pod:
          enableServiceLinks: false
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: immich
        ports:
          http:
            port: *port
    route:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.rafaribe.com"
          #Homepage
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/name: Immich
          gethomepage.dev/description: "Photo library and management"
          gethomepage.dev/icon: immich
          gethomepage.dev/widget.type: immich
          gethomepage.dev/widget.url: "http://immich-server.home:2283"
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_IMMICH_API_KEY}}` }}"
          gethomepage.dev/widget.version: "2"
        hostnames: ["photos.rafaribe.com"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
    persistence:
      library:
        type: nfs
        server: truenas.rafaribe.com
        path: /mnt/storage-0/immich
        globalMounts:
          - path: /usr/src/app/upload
      external-library:
        type: nfs
        server: truenas.rafaribe.com
        path: /mnt/storage-0/immich/external-library
        globalMounts:
          - path: /external-library
