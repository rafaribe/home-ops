---
# yaml-language-server: $schema=https://kubernetes-schemas.rafaribe.com/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: sonarr-tv-shows
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: "16.2"
            envFrom: &envFrom
              - secretRef:
                  name: sonarr
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.2.1262@sha256:0d6462d2e4d3d37bc5af27886f5023929f5f9342abf372bb665847ee1886a7a2
            env:
              COMPlus_EnableDiagnostics: "0"
              PUSHOVER_DEBUG: "false"
              SONARR__INSTANCE_NAME: Sonarr TV Shows
              SONARR__PORT: &port 80
              SONARR__LOG_LEVEL: info
              SONARR__THEME: dark
              TZ: Europe/Lisbon
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 750Mi
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [568, 10000]
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: external-nginx
        annotations:
          hajimari.io/icon: mdi:television-classic
        hosts:
          - host: &host "tv.${EXTERNAL_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config
      media:
        enabled: true
        type: nfs
        server: 10.0.1.6
        path: /mnt/storage-0/media
        mountPath: /media
      scripts:
        enabled: true
        type: configMap
        name: sonarr-configmap
        subPath: pushover-notify.sh
        mountPath: /scripts/pushover-notify.sh
        defaultMode: 0775
        readOnly: true
