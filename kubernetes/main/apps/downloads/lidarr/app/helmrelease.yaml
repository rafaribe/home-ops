---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: lidarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.0.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 30m
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile: { type: RuntimeDefault }
    controllers:
      lidarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/rafaribe/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: lidarr
        containers:
          app:
            image:
              repository: ghcr.io/rafaribe/lidarr-develop
              tag: 2.12.0.4633@sha256:34dbedf5835b521fea399c849ad6af36aa64a1bc80157623cf99900f0fa4ff56
            env:
              TZ: Europe/Lisbon
              LIDARR__INSTANCE_NAME: Lidarr
              LIDARR__SERVER__PORT: &port 80
              LIDARR__LOG_LEVEL: info
              LIDARR__AUTH__METHOD: External
              LIDARR__AUTH__REQUIRED: DisabledForLocalAddresses
              LIDARR__THEME: dark
            envFrom: *envFrom

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

            resources:
              requests:
                cpu: 50m
                memory: 500M
              limits:
                memory: 1Gi

    service:
      app:
        controller: lidarr
        ports:
          http:
            port: *port

    ingress:
      app:
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Automatic music downloads
          gethomepage.dev/group: Downloads
          gethomepage.dev/icon: sh-lidarr.svg
          gethomepage.dev/name: Lidarr
          external-dns.alpha.kubernetes.io/target: "internal.rafaribe.com"
        hosts:
          - host: &host "lidarr.rafaribe.com"
            paths:
              - path: /
                service:
                  identifier: app
                  port: *port
        tls:
          - hosts:
              - *host

    persistence:
      config:
        existingClaim: lidarr

      media:
        enabled: true
        type: nfs
        server: truenas.rafaribe.com
        path: /mnt/storage-0/media
        globalMounts:
          - path: /media
      media-ceph:
        existingClaim: ceph-media
        globalMounts:
          - path: /media-ceph
