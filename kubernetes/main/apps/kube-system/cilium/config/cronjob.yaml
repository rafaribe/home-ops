---
# ServiceAccount for the CronJob
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-restart-sa
  namespace: kube-system

---
# Role to grant permissions to restart DaemonSets
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-restart-role
  namespace: kube-system
rules:
- apiGroups: ["apps"]
  resources: ["daemonsets"]
  verbs: ["get", "list", "patch"]  # Required for rollout restart

---
# RoleBinding to associate the Role with the ServiceAccount
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-restart-rolebinding
  namespace: kube-system
subjects:
- kind: ServiceAccount
  name: cilium-restart-sa
  namespace: kube-system
roleRef:
  kind: Role
  name: cilium-restart-role
  apiGroup: rbac.authorization.k8s.io

---
# CronJob to restart Cilium DaemonSet
apiVersion: batch/v1
kind: CronJob
metadata:
  name: restart-cilium
  namespace: kube-system
spec:
  schedule: "0 */8 * * *"  # Every 8 hours
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: cilium-restart-sa  # Associate the ServiceAccount
          containers:
          - name: kubectl
            image: bitnami/kubectl:latest  # Use an image that contains kubectl
            command:
            - /bin/sh
            - -c
            - |
              # Restart Cilium DaemonSet by rolling restart
              kubectl rollout restart daemonset cilium -n kube-system
          restartPolicy: OnFailure