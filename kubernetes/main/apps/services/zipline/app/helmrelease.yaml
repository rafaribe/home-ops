---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app zipline
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    defaultPodOptions:
      automountServiceAccountToken: false
    controllers:
      zipline:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          postgres:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.3@sha256:8ba3204f6b293dd168766009aae2ce4fa986a29b931c2d30ac1b30238ac750b8
            envFrom: &envFrom
              - secretRef:
                  name: *app
        containers:
          app:
            image:
              repository: ghcr.io/diced/zipline
              tag: 3.7.9
            env:
              DEBUG: "true"
              TZ: "Europe/Lisbon"
              CORE_SECRET:
                valueFrom:
                  secretKeyRef:
                    name: *app
                    key: CORE_SECRET
              CORE_DATABASE_URL:
                valueFrom:
                  secretKeyRef:
                    name: *app
                    key: CORE_DATABASE_URL
              # TODO: 2023-06-03 add OAuth when Authentik support is merged: https://github.com/diced/zipline/discussions/321 and https://github.com/diced/zipline/pull/372/
              DATASOURCE_S3_ACCESS_KEY_ID:
                valueFrom:
                  secretKeyRef:
                    name: zipline-bucket
                    key: AWS_ACCESS_KEY_ID
              DATASOURCE_S3_SECRET_ACCESS_KEY:
                valueFrom:
                  secretKeyRef:
                    name: zipline-bucket
                    key: AWS_SECRET_ACCESS_KEY
              DATASOURCE_TYPE: "s3"
              DATASOURCE_S3_BUCKET:
                valueFrom:
                  configMapKeyRef:
                    name: zipline-bucket
                    key: BUCKET_NAME
              DATASOURCE_S3_ENDPOINT:
                valueFrom:
                  configMapKeyRef:
                    name: zipline-bucket
                    key: BUCKET_HOST
              DATASOURCE_S3_PORT:
                valueFrom:
                  configMapKeyRef:
                    name: zipline-bucket
                    key: BUCKET_PORT
              DATASOURCE_S3_REGION:
                valueFrom:
                  configMapKeyRef:
                    name: zipline-bucket
                    key: BUCKET_REGION
              DATASOURCE_S3_FORCE_S3_PATH: "true" # TODO: 2023-06-03 current in-cluster RGW doesn't use subdomain (VirtualHost) based S3 buckets yet, it uses path-based
              DATASOURCE_S3_USE_SSL: "false"
              # Core config
              CORE_RETURN_HTTPS: "true"
              CORE_COMPRESSION_ENABLED: "true"
              CORE_COMPRESSION_THRESHOLD: "200mb"
              CORE_COMPRESSION_ON_DASHBOARD: "true"
              RATELIMIT_USER: "5"
              RATELIMIT_ADMIN: "1"
              # Uploader
              UPLOADER_ROUTE: /u
              UPLOADER_LENGTH: 6
              UPLOADER_DEFAULT_FORMAT: "DATE"
              UPLOADER_DISABLED_EXTENSIONS: "ps1,bat,exe,sh,fish"
              UPLOADER_FORMAT_DATE: "YYYY-MM-DD_HH-mm-ss"
              UPLOADER_DEFAULT_EXPIRATION: ""
              # URLs
              URLS_ROUTE: /g
              URLS_LENGTH: 6
              # Website
              WEBSITE_TITLE: "Zipline - rafaribe"
              WEBSITE_SHOW_FILES_PER_USER: "false"
              WEBSITE_EXTERNAL_LINKS: '[{"label":"Powered by Zipline","link":"https://github.com/diced/zipline"}]'
              WEBSITE_SHOW_VERSION: "true"
              WEBSITE_DISABLE_MEDIA_PREVIEW: "false"
            envFrom: *envFrom
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 15m
                memory: 512Mi
              limits:
                memory: 2Gi
    service:
      app:
        controller: zipline
        ports:
          http:
            port: 3000
    ingress:
      app:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.rafaribe.com"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
        hosts:
          - host: &host "zipline.rafaribe.com"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts: [*host]
