---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: pinchflat
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      pinchflat:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/kieraneglin/pinchflat
              tag: v2025.3.6@sha256:9b0317b45be719b20b05b62ca6f518a86751560bba5faff795e51b2229a7a1eb
            env:
              TZ: Europe/Lisbon
              TZ_DATA_DIR: /tmp/elixir_tz_data
              PORT: &port 80
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                gpu.intel.com/i915: 1
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44]
        seccompProfile: { type: RuntimeDefault }
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"

    service:
      app:
        controller: pinchflat
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.rafaribe.com
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.rafaribe.com"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: pinchflat
      tmp:
        type: emptyDir
      yt-dlp:
        type: emptyDir
        globalMounts:
          - path: /etc/yt-dlp
      media:
        type: nfs
        server: truenas.rafaribe.com
        path: /mnt/storage-0/media
        advancedMounts:
          pinchflat:
            app:
              - path: /downloads
                subPath: Library/YouTube