---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app tandoor
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.1.2
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      tandoor:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5.0
            envFrom: &envFrom
              - secretRef:
                  name: *app
        containers:
          app:
            image:
              repository: ghcr.io/tandoorrecipes/recipes
              tag: 2.0.0-beta-3@sha256:a59a9f4b18c33f8ea2cf7a24a85df5db9e3c083382bf8b9aaa819f0914b73cf5
            env:
              TZ: ${TZ}
              ALLOWED_HOSTS: "*"
              COMMENT_PREF_DEFAULT: 1
              DB_ENGINE: django.db.backends.postgresql_psycopg2
              DEBUG: 0
              MAX_OWNED_SPACES_PREF_DEFAULT: 1000
              EMAIL_PORT: 2525
              ENABLE_SIGNUP: 0
              FRACTION_PREF_DEFAULT: 0
              GUNICORN_MEDIA: 0
              SHOPPING_MIN_AUTOSYNC_INTERVAL: 5
              TANDOOR_PORT: &tandoorPort 8000
            envFrom:
              - secretRef:
                  name: *app
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /accounts/login/
                    port: *tandoorPort
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /accounts/login/
                    port: *tandoorPort
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              requests:
                cpu: 10m
                memory: 256Mi
              limits:
                memory: 512Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
          nginx:
            image:
              repository: ghcr.io/nginxinc/nginx-unprivileged
              tag: 1.27.4
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
    service:
      app:
        controller: &app tandoor
        ports:
          http:
            port: &port 8080
    route:
      app:
        annotations:
          hajimari.io/icon: mdi:chef-hat
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Tandoor
          gethomepage.dev/description: Managing recipes, planned meals, shopping lists.
          gethomepage.dev/group: Home
          gethomepage.dev/icon: tandoor-recipes.png
          gethomepage.dev/pod-selector: >-
            app.kubernetes.io/name in (*app)
          gethomepage.dev/href: https://tandoor.rafaribe.com
          gethomepage.dev/widget.type: tandoor
          gethomepage.dev/widget.url: http://tandoor.services:8080
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_TANDOOR_API_KEY}}` }}"
        hostnames: ["tandoor.rafaribe.com"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      files:
        existingClaim: *app
        advancedMounts:
          tandoor:
            app:
              - path: /opt/recipes/mediafiles
                subPath: mediafiles
              - path: /opt/recipes/staticfiles
                subPath: staticfiles
            nginx:
              - path: /media
                subPath: mediafiles
              - path: /static
                subPath: staticfiles
      nginx-config:
        type: configMap
        name: tandoor-nginx
        advancedMounts:
          tandoor:
            nginx:
              - path: /etc/nginx/nginx.conf
                subPath: nginx-config
                readOnly: true
      temp:
        type: emptyDir
        advancedMounts:
          tandoor:
            app:
              - path: /tmp
                subPath: app-tmp
              - path: /opt/recipes/cookbook/static/django_js_reverse
                subPath: django_js_reverse
