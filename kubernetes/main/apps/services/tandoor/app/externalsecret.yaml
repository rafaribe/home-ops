---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &name tandoor
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: akeyless-secret-store
  target:
    name: *name
    template:
      data:
        # General
        SECRET_KEY: "{{ .TANDOOR_SECRET_KEY }}"
        # Database
        DB_ENGINE: django.db.backends.postgresql
        POSTGRES_HOST: &dbHost home-ops-storage-rw.storage.svc.cluster.local
        POSTGRES_PORT: "5432"
        POSTGRES_DB: &dbName tandoor
        POSTGRES_USER: &dbUser "{{ .TANDOOR_POSTGRES_USER }}"
        POSTGRES_PASSWORD: &dbPass "{{ .TANDOOR_POSTGRES_PASS }}"
        # Email
        EMAIL_HOST: "{{ .SMTP_HOST }}"
        EMAIL_PORT: "{{ .SMTP_PORT }}"
        EMAIL_HOST_USER: "{{ .SMTP_USERNAME }}"
        EMAIL_HOST_PASSWORD: "{{ .SMTP_PASS }}"
        EMAIL_USE_SSL: "1"
        DEFAULT_FROM_EMAIL: "{{ .SMTP_USERNAME }}"
        ACCOUNT_EMAIL_SUBJECT_PREFIX: "[Rafaribe Recipes]"
        # OpenId Connect
        SOCIAL_PROVIDERS: allauth.socialaccount.providers.openid_connect
        SOCIALACCOUNT_PROVIDERS: |
          { "openid_connect": { "SERVERS": [ { "id": "tandoor", "name": "Authelia", "server_url": "https://auth.rafaribe.com/.well-known/openid-configuration", "token_auth_method": "client_secret_basic", "APP": { "client_id": "tandoor", "secret": "{{ .TANDOOR_CLIENT_SECRET }}", } } ] }}
        # Postgres Init
        INIT_POSTGRES_DBNAME: *dbName
        INIT_POSTGRES_HOST: *dbHost
        INIT_POSTGRES_USER: *dbUser
        INIT_POSTGRES_PASS: *dbPass
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"
  dataFrom:
    - extract:
        key: /tandoor
