---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: &name tandoor
spec:
  provider:
    doppler:
      project: *name
      config: prod
      auth:
        secretRef:
          dopplerToken:
            name: doppler-token-auth-api
            key: dopplerToken
            namespace: flux-system
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &name tandoor
  namespace: services
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: *name
  target:
    name: tandoor-secret
    template:
      data:
        # App
        DB_ENGINE: django.db.backends.postgresql_psycopg2
        # DB_OPTIONS: '{"sslmode":"require"}'
        SECRET_KEY: "{{ .TANDOOR_SECRET_KEY }}"
        POSTGRES_HOST: &dbHost home-ops-storage-rw.storage.svc.cluster.local
        POSTGRES_PORT: "5432"
        POSTGRES_DB: &dbName tandoordb
        POSTGRES_USER: &dbUser "{{ .TANDOOR_POSTGRES_USER }}"
        POSTGRES_PASSWORD: &dbPass "{{ .TANDOOR_POSTGRES_PASS }}"
        EMAIL_HOST: "{{ .SMTP_HOST }}"
        EMAIL_PORT: "{{ .SMTP_PORT }}"
        EMAIL_HOST_USER: "{{ .SMTP_USERNAME }}"
        EMAIL_HOST_PASSWORD: "{{ .SMTP_PASS }}"
        EMAIL_USE_SSL: "1"
        DEFAULT_FROM_EMAIL: "{{ .SMTP_USERNAME }}"
        ACCOUNT_EMAIL_SUBJECT_PREFIX: "[Rafaribe Recipes]"
        SOCIALACCOUNT_PROVIDERS: '{"openid_connect":{"SERVERS":[{"id":"authentik","name":"rafaribe.com","server_url":"https://authentik.rafaribe.com/application/o/recipes/.well-known/openid-configuration","token_auth_method":"client_secret_basic","APP":{"client_id":"{{ .OIDC_CLIENT_ID }}","secret":"{{ .OIDC_CLIENT_SECRET }}"}}]}}'
        # Postgres Init
        INIT_POSTGRES_DBNAME: *dbName
        INIT_POSTGRES_HOST: *dbHost
        INIT_POSTGRES_USER: *dbUser
        INIT_POSTGRES_PASS: *dbPass
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"
  dataFrom:
    - find:
        name:
          regexp: .*
