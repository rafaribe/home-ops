---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app netbox
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  interval: 30m
  maxHistory: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      netbox:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom:
              - secretRef:
                  name: *app
        containers:
          app:
            image:
              repository: ghcr.io/netbox-community/netbox
              tag: v4.3.3-3.3.0
            env:
              TZ: Europe/Lisbon
              CORS_ORIGIN_ALLOW_ALL: "True"
              DB_WAIT_DEBUG: "1"
              HOUSEKEEPING_INTERVAL: "86400"
              MEDIA_ROOT: /opt/netbox/netbox/media
              REPORTS_ROOT: /opt/netbox/netbox/reports
              SCRIPTS_ROOT: /opt/netbox/netbox/scripts
              WEBHOOKS_ENABLED: "true"
              # Skip superuser creation during startup
              SKIP_SUPERUSER: "false"
            envFrom:
              - secretRef:
                  name: *app
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/
                    port: &port 8080
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  httpGet:
                    path: /api/
                    port: *port
                  initialDelaySeconds: 60
                  periodSeconds: 25
                  timeoutSeconds: 5
                  failureThreshold: 30
            resources:
              requests:
                cpu: 10m
                memory: 512Mi
              limits:
                memory: 2Gi
    defaultPodOptions:
      nodeSelector:
        kubernetes.io/arch: amd64
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    route:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Network
          gethomepage.dev/name: Netbox
          gethomepage.dev/icon: https://raw.githubusercontent.com/netbox-community/netbox/develop/netbox/project-static/img/netbox_logo.svg
          gethomepage.dev/description: Network infrastructure management
          gethomepage.dev/widget.type: netbox
          gethomepage.dev/widget.url: "http://netbox.network:8080"
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_NETBOX_API_TOKEN}}` }}"
        hostnames: ["netbox.rafaribe.com"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
    persistence:
      config:
        type: configMap
        name: netbox-config
        globalMounts:
          - path: /etc/netbox/config/configuration.py
            subPath: configuration.py
            readOnly: true
      reports:
        type: emptyDir
        globalMounts:
          - path: /opt/netbox/netbox/reports
      scripts:
        type: emptyDir
        globalMounts:
          - path: /opt/netbox/netbox/scripts
      media:
        existingClaim: netbox-media
        globalMounts:
          - path: /opt/netbox/netbox/media
