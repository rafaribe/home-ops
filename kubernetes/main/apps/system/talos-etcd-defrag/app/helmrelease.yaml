---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app talos-etcd-defrag
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.1.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      talos-etcd-defrag:
        type: cronjob
        annotations:
          reloader.stakater.com/auto: "true"
        cronjob:
          schedule: "0 2 * * 0" # Weekly on Sunday at 2 AM
          timeZone: &timeZone Europe/Lisbon
          concurrencyPolicy: Allow # Changed from Forbid to Allow multiple pods
          successfulJobsHistory: 3
          failedJobsHistory: 3
        replicas: 3 # Create 3 pods, one for each control plane
        containers:
          app:
            image:
              repository: ghcr.io/siderolabs/talosctl
              tag: v1.10.4
            command:
              - /bin/sh
              - -c
            args:
              - /scripts/defrag.sh
            env:
              TZ: *timeZone
              NODE_NAME:
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
              NODE_IP:
                valueFrom:
                  fieldRef:
                    fieldPath: status.hostIP
            resources:
              requests:
                cpu: 10m
                memory: 64Mi
              limits:
                cpu: 100m
                memory: 128Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
        serviceAccount:
          identifier: *app
    serviceAccount:
      talos-etcd-defrag:
        enabled: true
        labels: {}
        annotations: {}

    rbac:
      bindings:
        cluster-admin-binding:
          enabled: true
          type: ClusterRoleBinding
          roleRef:
            name: cluster-admin
            kind: ClusterRole
            apiGroup: rbac.authorization.k8s.io
          subjects:
            - kind: ServiceAccount
              name: talos-etcd-defrag
              namespace: "{{ .Release.Namespace }}"

    configMaps:
      scripts:
        enabled: true
        data:
          defrag.sh: |
            #!/bin/sh
            set -e
            echo "Starting etcd defragmentation on local controlplane node..."
            echo "Timestamp: $(date)"
            echo "Node: $NODE_NAME"
            echo "Node IP: $NODE_IP"

            # Verify we have the node IP
            if [ -z "$NODE_IP" ]; then
              echo "ERROR: NODE_IP environment variable not set"
              exit 1
            fi

            echo "Running: talosctl -n $NODE_IP etcd defrag"

            # Run etcd defrag on this node
            if timeout 300 talosctl -n "$NODE_IP" etcd defrag; then
              echo "✅ Successfully defragmented etcd on $NODE_NAME ($NODE_IP)"
              echo "Defragmentation completed at: $(date)"
            else
              echo "❌ Failed to defragment etcd on $NODE_NAME ($NODE_IP)"
              echo "Defragmentation failed at: $(date)"
              exit 1
            fi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000 # nobody user
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: talos-etcd-defrag
              topologyKey: kubernetes.io/hostname

    persistence:
      scripts:
        type: configMap
        identifier: scripts
        defaultMode: 0755
        globalMounts:
          - path: /scripts
            readOnly: true
      talos:
        type: secret
        name: talos-etcd-defrag
        globalMounts:
          - path: /var/run/secrets/talos.dev
            readOnly: true
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
