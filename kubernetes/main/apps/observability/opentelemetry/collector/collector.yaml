---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: otel-collector
spec:
  interval: 5m
  timeout: 10m
  install:
    timeout: 10m
  chart:
    spec:
      chart: opentelemetry-collector
      version: 0.93.3
      sourceRef:
        kind: HelmRepository
        name: open-telemetry
        namespace: flux-system
  values:
    fullnameOverride: "otel-collector"
    # Valid values are "daemonset", "deployment", and "statefulset".
    mode: "daemonset"
    # Handles basic configuration of components that
    # also require k8s modifications to work correctly.
    # .Values.config can be used to modify/add to a preset
    # component configuration, but CANNOT be used to remove
    # preset configuration. If you require removal of any
    # sections of a preset configuration, you cannot use
    # the preset. Instead, configure the component manually in
    # .Values.config and use the other fields supplied in the
    # values.yaml to configure k8s as necessary.
    presets:
      # Configures the collector to collect logs.
      # Adds the filelog receiver to the logs pipeline
      # and adds the necessary volumes and volume mounts.
      # Best used with mode = daemonset.
      logsCollection:
        enabled: true
        includeCollectorLogs: true
        # Enabling this writes checkpoints in /var/lib/otelcol/ host directory.
        # Note this changes collector's user to root, so that it can write to host directory.
        storeCheckpoints: false
      # Configures the collector to collect host metrics.
      # Adds the hostmetrics receiver to the metrics pipeline
      # and adds the necessary volumes and volume mounts.
      # Best used with mode = daemonset.
      hostMetrics:
        enabled: false
      # Configures the Kubernetes Processor to add Kubernetes metadata.
      # Adds the k8sattributes processor to all the pipelines
      # and adds the necessary rules to ClusteRole.
      # Best used with mode = daemonset.
      kubernetesAttributes:
        enabled: true
      # Configures the Kubernetes Cluster Receiver to collect cluster-level metrics.
      # Adds the k8s_cluster receiver to the metrics pipeline
      # and adds the necessary rules to ClusteRole.
      # Best used with mode = deployment or statefulset.
      clusterMetrics:
        enabled: false
      # Configures the collector to collect Kubelet metrics.
      # Adds the kubeletstats receiver to the metrics pipeline
      # and adds the necessary rules to ClusteRole.
      # Best used with mode = daemonset.
      kubeletMetrics:
        enabled: true

    configMap:
      # Specifies whether a configMap should be created (true by default)
      create: true

    # Base collector configuration.
    # Supports templating. To escape existing instances of {{ }}, use {{` <original content> `}}.
    # For example, {{ REDACTED_EMAIL }} becomes {{` {{ REDACTED_EMAIL }} `}}.
    config:
      exporters:
        logging: {}
      extensions:
        # The health_check extension is mandatory for this chart.
        # Without the health_check extension the collector will fail the readiness and liveliness probes.
        # The health_check extension can be modified, but should never be removed.
        health_check: {}
        memory_ballast: {}
      processors:
        batch: {}
        resourcedetection:
          detectors:
            - env
            - system
        # timestamp:
        #   round_to_nearest: 1s
        # If set to null, will be overridden with values based on k8s resource limits
        memory_limiter: null
        filter:
          metrics:
            exclude:
              match_type: strict
              metric_names:
                - process.cpu.time
                - process.disk.io
                - system.cpu.time
                - system.disk.io
                - system.disk.merged
                - system.disk.operation_time
                - system.disk.operations
                - system.filesystem.inodes.usage
                - system.filesystem.usage
                - system.memory.usage
                - system.network.connections
                - system.network.connections.tcp
                - system.network.dropped
                - system.network.errors
                - system.network.io
                - system.network.packets
                - system.paging.faults
                - system.paging.operations
                - system.paging.operations.page_in
                - system.paging.operations.page_out
                - system.paging.usage
                - system.processes.count
        metricstransform:
          transforms:
            - include: system.disk.io_time
              action: update
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.disk.weighted_io_time
              action: update
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.disk.pending_operations
              action: update
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: process.cpu.time
              experimental_match_labels:
                state: system
              action: insert
              new_name: process.cpu.time.system
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: process.cpu.time
              experimental_match_labels:
                state: user
              action: insert
              new_name: process.cpu.time.user
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: process.cpu.time
              experimental_match_labels:
                state: wait
              action: insert
              new_name: process.cpu.time.wait
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: process.disk.io
              experimental_match_labels:
                direction: read
              action: insert
              new_name: process.disk.io.read
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: process.disk.io
              experimental_match_labels:
                direction: write
              action: insert
              new_name: process.disk.io.write
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.cpu.time
              experimental_match_labels:
                state: idle
              action: insert
              new_name: system.cpu.time.idle
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.cpu.time
              experimental_match_labels:
                state: interrupt
              action: insert
              new_name: system.cpu.time.interrupt
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.cpu.time
              experimental_match_labels:
                state: nice
              action: insert
              new_name: system.cpu.time.nice
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.cpu.time
              experimental_match_labels:
                state: softirq
              action: insert
              new_name: system.cpu.time.softirq
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.cpu.time
              experimental_match_labels:
                state: steal
              action: insert
              new_name: system.cpu.time.steal
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.cpu.time
              experimental_match_labels:
                state: system
              action: insert
              new_name: system.cpu.time.system
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.cpu.time
              experimental_match_labels:
                state: user
              action: insert
              new_name: system.cpu.time.user
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.cpu.time
              experimental_match_labels:
                state: wait
              action: insert
              new_name: system.cpu.time.wait
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.memory.usage
              experimental_match_labels:
                state: buffered
              action: insert
              new_name: system.memory.usage.buffered
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.memory.usage
              experimental_match_labels:
                state: cached
              action: insert
              new_name: system.memory.usage.cached
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.memory.usage
              experimental_match_labels:
                state: inactive
              action: insert
              new_name: system.memory.usage.inactive
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.memory.usage
              experimental_match_labels:
                state: free
              action: insert
              new_name: system.memory.usage.free
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.memory.usage
              experimental_match_labels:
                state: slab_reclaimable
              action: insert
              new_name: system.memory.usage.slab_reclaimable
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.memory.usage
              experimental_match_labels:
                state: slab_unreclaimable
              action: insert
              new_name: system.memory.usage.slab_unreclaimable
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.memory.usage
              experimental_match_labels:
                state: used
              action: insert
              new_name: system.memory.usage.used
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.disk.io
              experimental_match_labels:
                direction: read
              action: insert
              new_name: system.disk.io.read
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.disk.io
              experimental_match_labels:
                direction: write
              action: insert
              new_name: system.disk.io.write
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.disk.operations
              experimental_match_labels:
                direction: read
              action: insert
              new_name: system.disk.operations.read
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.disk.operations
              experimental_match_labels:
                direction: write
              action: insert
              new_name: system.disk.operations.write
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.disk.operation_time
              experimental_match_labels:
                direction: read
              action: insert
              new_name: system.disk.operation_time.read
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.disk.operation_time
              experimental_match_labels:
                direction: write
              action: insert
              new_name: system.disk.operation_time.write
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.disk.merged
              experimental_match_labels:
                direction: read
              action: insert
              new_name: system.disk.merged.read
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.disk.merged
              experimental_match_labels:
                direction: write
              action: insert
              new_name: system.disk.merged.write
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.filesystem.usage
              experimental_match_labels:
                state: free
              action: insert
              new_name: system.filesystem.usage.free
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.filesystem.usage
              experimental_match_labels:
                state: reserved
              action: insert
              new_name: system.filesystem.usage.reserved
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.filesystem.usage
              experimental_match_labels:
                state: used
              action: insert
              new_name: system.filesystem.usage.used
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.filesystem.inodes.usage
              experimental_match_labels:
                state: free
              action: insert
              new_name: system.filesystem.inodes.usage.free
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.filesystem.inodes.usage
              experimental_match_labels:
                state: reserved
              action: insert
              new_name: system.filesystem.inodes.usage.reserved
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.filesystem.inodes.usage
              experimental_match_labels:
                state: used
              action: insert
              new_name: system.filesystem.inodes.usage.used
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.packets
              experimental_match_labels:
                direction: receive
              action: insert
              new_name: system.network.packets.receive
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.packets
              experimental_match_labels:
                direction: transmit
              action: insert
              new_name: system.network.packets.transmit
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.dropped
              experimental_match_labels:
                direction: receive
              action: insert
              new_name: system.network.dropped.receive
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.dropped
              experimental_match_labels:
                direction: transmit
              action: insert
              new_name: system.network.dropped.transmit
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.errors
              experimental_match_labels:
                direction: receive
              action: insert
              new_name: system.network.errors.receive
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.errors
              experimental_match_labels:
                direction: transmit
              action: insert
              new_name: system.network.errors.transmit
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.io
              experimental_match_labels:
                direction: receive
              action: insert
              new_name: system.network.io.receive
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.io
              experimental_match_labels:
                direction: transmit
              action: insert
              new_name: system.network.io.transmit
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.connections
              experimental_match_labels:
                protocol: tcp
              action: insert
              new_name: system.network.connections.tcp
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set:
                    - state
            - include: system.network.connections.tcp
              experimental_match_labels:
                state: CLOSE_WAIT
              action: insert
              new_name: system.network.connections.tcp.CLOSE_WAIT
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.connections.tcp
              experimental_match_labels:
                state: CLOSED
              action: insert
              new_name: system.network.connections.tcp.CLOSED
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.connections.tcp
              experimental_match_labels:
                state: CLOSING
              action: insert
              new_name: system.network.connections.tcp.CLOSING
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.connections.tcp
              experimental_match_labels:
                state: DELETE
              action: insert
              new_name: system.network.connections.tcp.DELETE
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.connections.tcp
              experimental_match_labels:
                state: ESTABLISHED
              action: insert
              new_name: system.network.connections.tcp.ESTABLISHED
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.connections.tcp
              experimental_match_labels:
                state: FIN_WAIT_1
              action: insert
              new_name: system.network.connections.tcp.FIN_WAIT_1
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.connections.tcp
              experimental_match_labels:
                state: FIN_WAIT_2
              action: insert
              new_name: system.network.connections.tcp.FIN_WAIT_2
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.connections.tcp
              experimental_match_labels:
                state: LAST_ACK
              action: insert
              new_name: system.network.connections.tcp.LAST_ACK
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.connections.tcp
              experimental_match_labels:
                state: LISTEN
              action: insert
              new_name: system.network.connections.tcp.LISTEN
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.connections.tcp
              experimental_match_labels:
                state: SYN_RECEIVED
              action: insert
              new_name: system.network.connections.tcp.SYN_RECEIVED
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.connections.tcp
              experimental_match_labels:
                state: SYN_SENT
              action: insert
              new_name: system.network.connections.tcp.SYN_SENT
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.network.connections.tcp
              experimental_match_labels:
                state: TIME_WAIT
              action: insert
              new_name: system.network.connections.tcp.TIME_WAIT
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.paging.usage
              experimental_match_labels:
                state: cached
              action: insert
              new_name: system.paging.usage.cached
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.paging.usage
              experimental_match_labels:
                state: free
              action: insert
              new_name: system.paging.usage.free
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.paging.usage
              experimental_match_labels:
                state: used
              action: insert
              new_name: system.paging.usage.used
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.paging.operations
              experimental_match_labels:
                direction: page_in
              action: insert
              new_name: system.paging.operations.page_in
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set:
                    - type
            - include: system.paging.operations.page_in
              experimental_match_labels:
                type: major
              action: insert
              new_name: system.paging.operations.page_in.major
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.paging.operations.page_in
              experimental_match_labels:
                type: minor
              action: insert
              new_name: system.paging.operations.page_in.minor
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.paging.operations
              experimental_match_labels:
                direction: page_out
              action: insert
              new_name: system.paging.operations.page_out
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set:
                    - type
            - include: system.paging.operations.page_out
              experimental_match_labels:
                type: major
              action: insert
              new_name: system.paging.operations.page_out.major
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.paging.operations.page_out
              experimental_match_labels:
                type: minor
              action: insert
              new_name: system.paging.operations.page_out.minor
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.paging.faults
              experimental_match_labels:
                type: major
              action: insert
              new_name: system.paging.faults.major
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.paging.faults
              experimental_match_labels:
                type: minor
              action: insert
              new_name: system.paging.faults.minor
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.processes.count
              experimental_match_labels:
                status: blocked
              action: insert
              new_name: system.processes.count.blocked
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
            - include: system.processes.count
              experimental_match_labels:
                status: running
              action: insert
              new_name: system.processes.count.running
              operations:
                - action: aggregate_labels
                  aggregation_type: sum
                  label_set: []
      receivers:
        hostmetrics:
          collection_interval: 10s
          scrapers:
            memory: {}
            cpu: {}
            load: {}
            disk: {}
            filesystem: {}
            network: {}
            paging: {}
            processes: {}
        jaeger:
          protocols:
            grpc:
              endpoint: ${env:MY_POD_IP}:14250
            thrift_http:
              endpoint: ${env:MY_POD_IP}:14268
            thrift_compact:
              endpoint: ${env:MY_POD_IP}:6831
        otlp:
          protocols:
            grpc:
              endpoint: ${env:MY_POD_IP}:4317
            http:
              endpoint: ${env:MY_POD_IP}:4318
        prometheus:
          config:
            scrape_configs:
              - job_name: opentelemetry-collector
                scrape_interval: 10s
                static_configs:
                  - targets:
                      - ${env:MY_POD_IP}:8888
        zipkin:
          endpoint: ${env:MY_POD_IP}:9411
      service:
        telemetry:
          metrics:
            address: ${env:MY_POD_IP}:8888
        extensions:
          - health_check
          - memory_ballast
        pipelines:
          logs:
            exporters:
              - logging
            processors:
              - memory_limiter
              - batch
            receivers:
              - otlp
          metrics:
            receivers:
              - hostmetrics
            processors:
              - metricstransform
              - filter
              # - timestamp
              - resourcedetection
              - batch
            exporters:
              - logging
          traces:
            exporters:
              - logging
            processors:
              - memory_limiter
              - batch
            receivers:
              - otlp
              - jaeger
              - zipkin
    # Configuration for ports
    # nodePort is also allowed
    ports:
      otlp:
        enabled: true
        containerPort: 4317
        servicePort: 4317
        hostPort: 4317
        protocol: TCP
        # nodePort: 30317
        appProtocol: grpc
      otlp-http:
        enabled: true
        containerPort: 4318
        servicePort: 4318
        hostPort: 4318
        protocol: TCP
      jaeger-compact:
        enabled: true
        containerPort: 6831
        servicePort: 6831
        hostPort: 6831
        protocol: UDP
      jaeger-thrift:
        enabled: true
        containerPort: 14268
        servicePort: 14268
        hostPort: 14268
        protocol: TCP
      jaeger-grpc:
        enabled: true
        containerPort: 14250
        servicePort: 14250
        hostPort: 14250
        protocol: TCP
      zipkin:
        enabled: true
        containerPort: 9411
        servicePort: 9411
        hostPort: 9411
        protocol: TCP
      metrics:
        # The metrics port is disabled by default. However you need to enable the port
        # in order to use the ServiceMonitor (serviceMonitor.enabled) or PodMonitor (podMonitor.enabled).
        enabled: true
        containerPort: 8888
        servicePort: 8888
        protocol: TCP

    # Resource limits & requests. Update according to your own use case as these values might be too low for a typical deployment.
    resources:
      limits:
        cpu: 256m
        memory: 512Mi

    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8888"

    podLabels: {}

    # Host networking requested for this pod. Use the host's network namespace.
    hostNetwork: false

    # Pod DNS policy ClusterFirst, ClusterFirstWithHostNet, None, Default, None
    dnsPolicy: "Default"
