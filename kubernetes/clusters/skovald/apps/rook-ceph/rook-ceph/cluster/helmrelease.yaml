---
# yaml-language-server: $schema=https://kubernetes-schemas.trux.dev/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 15m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.11.4
      sourceRef:
        kind: HelmRepository
        name: rook-ceph-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation: # perform remediation when helm install fails
      retries: 6
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 6
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  values:
    toolbox:
      enabled: true

    monitoring:
      enabled: true
      # bluefs_buffered_io = false
    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true

    # cephClusterSpec:
    #   priorityClassNames:
    #     all: system-node-critical
    #     mgr: system-cluster-critical
    #   disruptionManagement:
    #     managePodBudgets: true
    #   healthCheck:
    #     daemonHealth:
    #       mon:
    #         interval: 45s
    #         timeout: 600s
    #     livenessProbe:
    #       mon:
    #         probe:
    #           timeoutSeconds: 10
    #       osd:
    #         probe:
    #           timeoutSeconds: 15

    #     startupProbe:
    #       mon:
    #         probe:
    #           timeoutSeconds: 15
    #       osd:
    #         probe:
    #           timeoutSeconds: 15
    network:
      provider: host
      connections:
        encryption:
          enabled: true
        compression:
          enabled: true
    cephClusterSpec:
      resources:
        mon:
          requests:
            cpu: "49m"
            memory: "477M"
          limits:
            memory: "512Mi"
        osd:
          requests:
            cpu: "442m"
            memory: "440Mi"
        prepareosd:
          requests:
            cpu: "50m"
            memory: "50Mi"
          limits: {}
        mgr-sidecar:
          requests:
            cpu: "49m"
            memory: "94M"
          limits:
            memory: "208M"
        crashcollector:
          requests:
            cpu: "15m"
            memory: "64M"
          limits:
            memory: "64M"
        logcollector:
          requests:
            cpu: "100m"
            memory: "100M"
          limits:
            memory: "1G"
        cleanup:
          requests:
            cpu: "250m"
            memory: "100M"
          limits:
            memory: "1G"
    dashboard:
      enabled: true
      urlPrefix: /
      ssl: false
    ingress:
      dashboard:
        ingressClassName: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          hajimari.io/appName: "Rook"
          hajimari.io/icon: mdi:chess-rook
        host:
          name: &host "rook.${EXTERNAL_DOMAIN}"
          path: "/"
        tls:
          - hosts:
              - *host
    storage:
      useAllNodes: false
      useAllDevices: false
      config:
        osdsPerDevice: "1"
      nodes:
        - name: "talos1"
          devices:
            - name: "/dev/sdb"
        - name: "talos2"
          devices:
            - name: "/dev/sdb"
            - name: "/dev/sdc"
        - name: "talos4"
          devices:
            - name: "/dev/sdb"
    cephBlockPoolsVolumeSnapshotClass:
      enabled: false
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephFileSystems:
      - name: ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              limits:
                # cpu: "500m"
                memory: "4Gi"
              requests:
                cpu: "1000m"
                memory: "4Gi"
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          mountOptions: []
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephObjectStores:
      - name: ceph-objectstore
        spec:
          metadataPool:
            failureDomain: host
            replicated:
              size: 3
          dataPool:
            failureDomain: host
            erasureCoded:
              dataChunks: 2
              codingChunks: 1
          preservePoolsOnDelete: true
          gateway:
            port: 80
            resources:
              requests:
                cpu: 100m
                memory: 128M
              limits:
                memory: 2Gi
            instances: 1
          healthCheck:
            bucket:
              interval: 60s
        storageClass:
          enabled: true
          name: ceph-bucket
          reclaimPolicy: Delete
          parameters:
            region: us-east-1
