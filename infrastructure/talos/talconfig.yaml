---
clusterName: ${clusterName}

# renovate: image depName=ghcr.io/siderolabs/installer
talosVersion: v1.6.7
# renovate: image depName=registry.k8s.io/kube-apiserver
kubernetesVersion: v1.29.3
endpoint: "https://${clusterEndpointIP}:6443"

allowSchedulingOnMasters: true

imageFactory:
  registryURL: factory.talos.dev
  schematicEndpoint: /schematics
  protocol: https

clusterPodNets:
  - 10.196.0.0/16
clusterSvcNets:
  - 10.197.0.0/16

cniConfig:
  name: none

additionalMachineCertSans: &san
  - ${clusterEndpointIP}
  - ${clusterName}.${domainName}
  - "127.0.0.1"

additionalApiServerCertSans: *san

nodes:
  - hostname: freya.${domainName}
    ipAddress: &freya ${k8s_ip_prefix}0
    controlPlane: true
    installDisk: /dev/sda
    machineFiles:
      - &ts
        op: create
        path: /var/etc/tailscale/auth.env
        permissions: 0o600
        content: |
          TS_KUBE_SECRET=""
          TS_STATE_DIR=/var/lib/tailscale
          TS_USERSPACE=false
          TS_ACCEPT_DNS=false
      - &tsNode
        op: append
        path: /var/etc/tailscale/auth.env
        permissions: 0o600
        content: |
          TS_HOSTNAME=freya-talos
          TS_EXTRA_ARGS=--accept-routes=false --netfilter-mode=off --snat-subnet-routes=false --advertise-tags=tag:talos
          TS_AUTHKEY=${tailscale_auth_key}
          TS_ROUTES= ${k8s_ip_prefix}0/32

  - hostname: loki.${domainName}
    ipAddress: &loki ${k8s_ip_prefix}1
    controlPlane: true
    installDisk: /dev/sda
    machineFiles:
      - &ts
        op: create
        path: /var/etc/tailscale/auth.env
        permissions: 0o600
        content: |
          TS_KUBE_SECRET=""
          TS_STATE_DIR=/var/lib/tailscale
          TS_USERSPACE=false
          TS_ACCEPT_DNS=false
      - &tsNode
        op: append
        path: /var/etc/tailscale/auth.env
        permissions: 0o600
        content: |
          TS_HOSTNAME=loki-talos
          TS_EXTRA_ARGS=--accept-routes=false --netfilter-mode=off --snat-subnet-routes=false --advertise-tags=tag:talos
          TS_AUTHKEY=${tailscale_auth_key}
          TS_ROUTES=${k8s_ip_prefix}1/32

  - hostname: thor.${domainName}
    ipAddress: &thor ${k8s_ip_prefix}3
    controlPlane: true
    installDisk: /dev/sda
    machineFiles:
      - &ts
        op: create
        path: /var/etc/tailscale/auth.env
        permissions: 0o600
        content: |
          TS_KUBE_SECRET=""
          TS_STATE_DIR=/var/lib/tailscale
          TS_USERSPACE=false
          TS_ACCEPT_DNS=false
      - &tsNode
        op: append
        path: /var/etc/tailscale/auth.env
        permissions: 0o600
        content: |
          TS_HOSTNAME=thor-talos
          TS_EXTRA_ARGS=--accept-routes=false --netfilter-mode=off --snat-subnet-routes=false --advertise-tags=tag:talos
          TS_AUTHKEY=${tailscale_auth_key}
          TS_ROUTES=${k8s_ip_prefix}3/32

  - hostname: odin.${domainName}
    ipAddress: &odin ${k8s_ip_prefix}2
    controlPlane: false
    installDisk: /dev/sda
    machineFiles:
      - &ts
        op: create
        path: /var/etc/tailscale/auth.env
        permissions: 0o600
        content: |
          TS_KUBE_SECRET=""
          TS_STATE_DIR=/var/lib/tailscale
          TS_USERSPACE=false
          TS_ACCEPT_DNS=false
      - &tsNode
        op: append
        path: /var/etc/tailscale/auth.env
        permissions: 0o600
        content: |
          TS_HOSTNAME=odin-talos
          TS_EXTRA_ARGS=--accept-routes=false --netfilter-mode=off --snat-subnet-routes=false --advertise-tags=tag:talos
          TS_AUTHKEY=${tailscale_auth_key}
          TS_ROUTES=${k8s_ip_prefix}2/32

  - hostname: tyr.${domainName}
    ipAddress: &tyr ${k8s_ip_prefix}4
    controlPlane: false
    installDisk: /dev/sda
    machineFiles:
      - &ts
        op: create
        path: /var/etc/tailscale/auth.env
        permissions: 0o600
        content: |
          TS_KUBE_SECRET=""
          TS_STATE_DIR=/var/lib/tailscale
          TS_USERSPACE=false
          TS_ACCEPT_DNS=false
      - &tsNode
        op: append
        path: /var/etc/tailscale/auth.env
        permissions: 0o600
        content: |
          TS_HOSTNAME=tyr-talos
          TS_EXTRA_ARGS=--accept-routes=false --netfilter-mode=off --snat-subnet-routes=false --advertise-tags=tag:talos
          TS_AUTHKEY=${tailscale_auth_key}
          TS_ROUTES=${k8s_ip_prefix}4/32

controlPlane:
  schematic:
    customization:
      extraKernelArgs:
        - net.ifnames=0
      systemExtensions:
        officialExtensions:
          - siderolabs/i915-ucode
          - siderolabs/intel-ice-firmware
          - siderolabs/intel-ucode
          - siderolabs/tailscale
          - siderolabs/qemu-guest-agent
          - siderolabs/nvidia-open-gpu-kernel-modules
          - siderolabs/nvidia-container-toolkit
  patches:
    # Disable search domain everywhere
    - |-
      machine:
        network:
          disableSearchDomain: true

    # Force nameserver
    - |-
      machine:
        network:
          nameservers:
            - 1.1.1.1

    # Configure NTP
    - |-
      machine:
        time:
          disabled: false
          servers:
            - 10.1.1.1

    # Enable KubePrism
    - |-
      machine:
        features:
          kubePrism:
            enabled: true
            port: 7445

    # Cluster configuration
    - |-
      cluster:
        allowSchedulingOnMasters: true
        proxy:
          disabled: true

    # ETCD configuration
    - |-
      cluster:
        etcd:
          advertisedSubnets:
            - 10.1.1.0/24

    # Configure containerd
    - |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |
              [plugins]
                [plugins."io.containerd.grpc.v1.cri"]
                  enable_unprivileged_ports = true
                  enable_unprivileged_icmp = true

    # Configure nfs mount options
    - |-
      machine:
        files:
          - op: overwrite
            path: /etc/nfsmount.conf
            permissions: 0o644
            content: |
              [ NFSMount_Global_Options ]
              nfsvers=4.2
              hard=True
              noatime=True
              nodiratime=True
              rsize=131072
              wsize=131072
              nconnect=8

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Kubelet configuration
    - |-
      machine:
        kubelet:
          extraArgs:
            feature-gates: GracefulNodeShutdown=true,NewVolumeManagerReconstruction=false
            rotate-server-certificates: "true"
          extraConfig:
            maxPods: 150
          nodeIP:
            validSubnets:
                - 10.1.1.0/24

    # Custom sysctls
    - |-
      machine:
        sysctls:
          fs.inotify.max_queued_events: "65536"
          fs.inotify.max_user_instances: "8192"
          fs.inotify.max_user_watches: "524288"
          net.core.rmem_max: "2500000"
          net.core.wmem_max: "2500000"
worker:
  schematic:
    customization:
      extraKernelArgs:
        - net.ifnames=0
        - i915.disable_display=true
      systemExtensions:
        officialExtensions:
          - siderolabs/i915-ucode
          - siderolabs/intel-ice-firmware
          - siderolabs/intel-ucode
          - siderolabs/tailscale
          - siderolabs/qemu-guest-agent
          - siderolabs/nvidia-open-gpu-kernel-modules
          - siderolabs/nvidia-container-toolkit
  patches:
    - &containerdPatch |
      files:
        - content: |
            [plugins]
              [plugins."io.containerd.grpc.v1.cri"]
                enable_unprivileged_ports = true
                enable_unprivileged_icmp = true
          path: /etc/cri/conf.d/20-customization.part
          op: create
    - &machine |-
      machine:
        - op: add
            path: /machine
            value:
              kernel:
                modules:
                  - name: nvidia
                  - name: nvidia_uvm
                  - name: nvidia_drm
                  - name: nvidia_modeset
    - &systemctls |-
      systemctls:
        - op: add
            path: /systemctls
            value:
              sysctls:
                net.core.bpf_jit_harden: 1
    - &nodeLabels |-
      nodelabels:
        - op: add
            path: /nodeLabels
            value:
              node-role.kubernetes.io/worker: worker
