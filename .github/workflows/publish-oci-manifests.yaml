name: "Publish OCI artifact"

on:
  workflow_dispatch: {}
  push:
    branches:
      - main
    paths:
      - .github/workflows/publish-oci-manifests.yaml
      - kubernetes/**

# Default GITHUB_TOKEN token permissions do NOT support cosign and must be enabled.
# This is to set the package and id_token permissions to read|write.
# Current default permissions can be viewed here: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
permissions: write-all

env:
  OCI_REPO: "oci://ghcr.io/rafaribe/manifests/${{ github.event.repository.name }}"
  GHCR_REPO: "ghcr.io/rafaribe/manifests/${{ github.event.repository.name }}"

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      COSIGN_EXPERIMENTAL: "true"
      COSIGN_YES: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Setup Flux CLI
        uses: fluxcd/flux2/action@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create OCI artifact
        run: |
          flux push artifact "$OCI_REPO:$(git rev-parse --short HEAD)" \
            --path="./kubernetes" \
            --source="$(git config --get remote.origin.url)" \
            --revision="$(git branch --show-current)@sha1:$(git rev-parse HEAD)"

      - name: Create OCI artifact tag
        run: |
          flux tag artifact "$OCI_REPO:$(git rev-parse --short HEAD)" --tag main

      - uses: imjasonh/setup-crane@00c9e93efa4e1138c9a7a5c594acd6c75a2fbf0c # v0.3

      - uses: sigstore/cosign-installer@main

      - name: Get the digest of the OCI artifact
        id: crane
        run: |
          DIGEST=$(crane digest "$GHCR_REPO:$(git rev-parse --short HEAD)")
          echo "DIGEST=$DIGEST" >> $GITHUB_OUTPUT

      - name: Sign the OCI artifact
        run: cosign sign "$GHCR_REPO@${{ steps.crane.outputs.DIGEST }}" -y
  sync:
    name: Flux Sync
    runs-on: ["arc-runner-set-home-ops"]
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Setup Kube Tools
        uses: yokawasa/action-setup-kube-tools@af4ebb1af1efd30c5bd84a2e9773355ad6362a33 # v0.9.3
        with:
          setup-tools: yq

      - name: Setup Flux
        uses: fluxcd/flux2/action@a18d4f345021182d6516bf3e8e00210567f46ab5 # v2.1.2

      - name: Write kubeconfig
        id: kubeconfig
        uses: timheuer/base64-to-file@adaa40c0c581f276132199d4cf60afa07ce60eac # v1.2
        with:
          encodedString: "${{ secrets.KUBECONFIG }}"
          fileName: kubeconfig

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@fea790cb660e33aef4bdf07304e28fedd77dfa13 # v39.2.4
        with:
          files: kubernetes/**/

      - name: Flux Sync
        env:
          KUBECONFIG: "${{ steps.kubeconfig.outputs.filePath }}"
        shell: bash
        run: |
          flux reconcile source oci home-ops -n flux-system
          flux reconcile kustomization cluster -n flux-system
          flux reconcile kustomization cluster-apps -n flux-system
