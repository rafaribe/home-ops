{
  // General RenovateBot configuration
  extends: [
    "config:base",
    "docker:enableMajor",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":enablePreCommit",
    ":automergeDigest",
    ":automergeBranchPush",
    ":enablePreCommit",
    "github>rafaribe/home-ops//.github/renovate/allowedVersions.json5",
    "github>rafaribe/home-ops//.github/renovate/autoMerge.json5",
    "github>rafaribe/home-ops//.github/renovate/commitMessage.json5",
    "github>rafaribe/home-ops//.github/renovate/disabledDatasources.json5",
    "github>rafaribe/home-ops//.github/renovate/groups.json5",
    "github>rafaribe/home-ops//.github/renovate/labels.json5",
    "github>rafaribe/home-ops//.github/renovate/semanticCommits.json5",
  ],
  enabled: true,
  platform: "github",
  username: "naoki-bot[bot]",
  repositories: ["rafaribe/home-ops"],
  gitAuthor: "naoki-bot <117869532+naoki-bot[bot]@users.noreply.github.com",
  semanticCommits: "enabled",
  onboarding: false,
  dependencyDashboard: true,
  dependencyDashboardTitle: "Renovate Dashboard ðŸ¤–",
  suppressNotifications: ["prIgnoreNotification"],
  rebaseWhen: "conflicted",
  timezone: "Europe/Lisbon",
  helmv3: {
    fileMatch: ["kubernetes/charts/.+/Chart\\.ya?ml$"],
  },
  "helm-values": {
    fileMatch: [
      "kubernetes/manifests/.+/helmrelease\\.ya?ml$",
      "kubernetes/global/.+/helmrelease\\.ya?ml$",
    ],
  },
  kubernetes: {
    fileMatch: [
      "kubernetes/manifests/.+\\.ya?ml$",
      "kubernetes/global/.+\\.ya?ml$",
    ],
  },
  flux: {
    fileMatch: [
      "kubernetes/manifests/.+\\.ya?ml$",
      "kubernetes/global/.+\\.ya?ml$",
      "kubernetes/clusters/.+\\.ya?ml$",
    ],
  },
  regexManagers: [
    // regexManager to read and process GitHub release artifacts
    {
      fileMatch: [
        "kubernetes/clusters/.+\\.ya?ml$",
        "kubernetes/global/.+\\.ya?ml$",
      ],
      matchStrings: [
        "datasource=(?<datasource>.*?)\n *url: https://github\\.com/(?<depName>.*?)\\.git\n *ref:\n *tag: (?<currentValue>.*)\n",
        'datasource=(?<datasource>.*?) depName=(?<depName>.*?)\n.*?_version: "(?<currentValue>.*)"\n',
        'datasource=(?<datasource>.*?) depName=(?<depName>.*?)\n.*?_VERSION="(?<currentValue>.*)"\n',
      ],
      datasourceTemplate: "github-releases",
      depNameTemplate: "{{org}}/{{repo}}",
    },
    // Generic Regex Manager
    {
      fileMatch: [
        "kubernetes/clusters/.+\\.ya?ml$",
        "kubernetes/global/.+\\.ya?ml$",
      ],
      matchStrings: [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( registryUrl=(?<registryUrl>.*?))?( versioning=(?<versioning>.*=?))?\n .*: (?<currentValue>.*=?)",
      ],
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
      registryUrlTemplate: "{{#if registryUrl}}{{{registryUrl}}}{{else}}{{/if}}",
    },
    // Generic Docker image Regex manager
    {
      fileMatch: [
        "kubernetes/clusters/.+\\.ya?ml$",
        "kubernetes/global/.+\\.ya?ml$",
        "kubernetes/talos/.+\\.ya?ml$",
      ],
      matchStrings: [
        "# renovate: docker-image( registryUrl=(?<registryUrl>.*?))?( versioning=(?<versioning>.*=?))?\n .*: (?<depName>.*?):(?<currentValue>.*=?)",
      ],
      datasourceTemplate: "docker",
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}docker{{/if}}",
      registryUrlTemplate: "{{#if registryUrl}}{{{registryUrl}}}{{else}}{{/if}}",
    },
  ],
  packageRules: [
    // Setup datasources
    {
      matchDatasources: ["helm"],
      ignoreDeprecated: true,
    },
    {
      description: "Use loose versioning for certain dependencies",
      matchDatasources: ["docker", "github-releases"],
      versioning: "loose",
      matchPackageNames: [
        "ghcr.io/onedr0p/plex",
        "ghcr.io/onedr0p/qbittorrent",
      ],
    },
    {
      matchDatasources: ["docker"],
      matchPackageNames: ["blakeblackshear/frigate"],
      versioning: "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$",
    },
    // Version strategies
    {
      matchDatasources: ["docker"],
      matchPackageNames: [
        "ghcr.io/k8s-at-home/plex",
        "ghcr.io/k8s-at-home/qbittorrent",
      ],
      versioning: "loose",
    },
    {
      matchDatasources: ["docker"],
      matchPackageNames: ["tomsquest/docker-radicale"],
      versioning: "pep440",
    },
    // Group packages
    {
      matchDatasources: ["helm", "docker"],
      matchPackagePatterns: ["^rook.ceph"],
      groupName: "rook-ceph-suite",
      additionalBranchPrefix: "",
      separateMinorPatch: true,
    },
    {
      matchDatasources: ["docker"],
      matchPackageNames: [
        "k8s.gcr.io/kube-apiserver",
        "k8s.gcr.io/kube-controller-manager",
        "k8s.gcr.io/kube-scheduler",
        "ghcr.io/siderolabs/kubelet",
      ],
      groupName: "kubernetes",
      additionalBranchPrefix: "",
      separateMinorPatch: true,
    },
    {
      matchDatasources: ["helm", "docker"],
      matchPackageNames: [
        "quay.io/cilium/cilium",
        "quay.io/cilium/operator-generic",
        "cilium",
      ],
      groupName: "cilium",
      additionalBranchPrefix: "",
      separateMinorPatch: true,
    },
    {
      matchDatasources: ["docker"],
      matchPackageNames: [
        "ghcr.io/linuxserver/calibre",
        "ghcr.io/linuxserver/calibre-web",
      ],
      versioning: "regex:^version-v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
    },
    {
      matchDatasources: ["docker"],
      matchPackageNames: ["blakeblackshear/frigate"],
      versioning: "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$",
    },
    {
      matchDatasources: ["docker"],
      matchPackageNames: ["docker.io/timberio/vector"],
      versioning: "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$",
    },
    {
      description: "Use custom versioning for Minio",
      matchDatasources: ["docker"],
      versioning: "regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z(-(?<compatibility>.*))?$",
      matchPackageNames: ["quay.io/minio/minio"],
    },
    {
      matchDatasources: ["docker"],
      matchPackageNames: ["tomsquest/docker-radicale"],
      versioning: "pep440",
    },
    {
      description: "Use loose versioning for certain dependencies",
      matchDatasources: ["docker", "github-releases"],
      versioning: "loose",
      matchPackageNames: [
        "ghcr.io/onedr0p/plex",
        "ghcr.io/onedr0p/qbittorrent",
      ],
    },
  ],
}
