---
version: "2.1"
services:
  grafana-agent:
    image: grafana/agent:latest
    container_name: grafana-agent
    volumes:
      - /data/var/lib/docker/containers:/containers #Promtail Docker Logs
      - /var/log/journal:/journal #Journal logs
      - /home/{{ansible_user}}/grafana-agent/agent.yml:/etc/agent/agent.yml # Agent Config
      - /:/host/root:ro,rslave # rootfs / node_exporter
      - /sys:/host/sys:ro,rslave # sys / node_exporter
      - /proc:/host/proc:ro,rslave #processes / node_exporter
    command: -config.file=/etc/agent/agent.yml -config.expand-env=true
    networks:
      - services
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        tag: "{{ '{{' }}.ImageName{{ '}}' }}|{{ '{{' }}.Name{{ '}}' }}|{{ '{{' }}.ImageFullID{{ '}}' }}|{{ '{{' }}.FullID{{ '}}' }}"
        
  cadvisor:
    image: unibaktr/cadvisor:0.39.0
    container_name: cadvisor
    volumes:
        - /:/rootfs:ro
        - /var/run:/var/run:ro
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
        - /dev/disk/:/dev/disk:ro
        - /etc/machine-id/:/etc/machine-id:ro
    devices:
        - /dev/kmsg:/dev/kmsg:ro
    networks:
      - services
    ports:
        - "8080:8080"
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        tag: "{{ '{{' }}.ImageName{{ '}}' }}|{{ '{{' }}.Name{{ '}}' }}|{{ '{{' }}.ImageFullID{{ '}}' }}|{{ '{{' }}.FullID{{ '}}' }}"
  seafile:
    image: seafileltd/seafile-mc:9.0.4
    container_name: seafile
    restart: unless-stopped
    depends_on:
      - seafile-db
    links:
      - seafile-db
    volumes:
      - ./seafile-container-data:/seafile:rw
    environment:
      - VIRTUAL_HOST=seafile.{{cloudflare_zone}}
      - VIRTUAL_PORT=8000
      - LETSENCRYPT_HOST=seafile.{{cloudflare_zone}}
      - LETSENCRYPT_EMAIL={{seafile_email}}
      - SEAFILE_NAME=Seafile
      - SEAFILE_ADDRESS={{seafile_email}}
      - SEAFILE_ADMIN={{seafile_email}}
      - SEAFILE_ADMIN_PW={{seafile_password}}
      - SERVICE_URL=https://seafile.{{cloudflare_zone}}
      - FILE_SERVER_ROOT=https://seafile.{{cloudflare_zone}}/seafhttp
      - MYSQL_SERVER=seafile-db
      - MYSQL_USER=seafile
      - MYSQL_USER_PASSWORD={{ mysql_root_password}}
      - MYSQL_ROOT_PASSWORD={{ mysql_root_password}}
    networks:
    - services

  seafile-db:
    image: mariadb:latest
    container_name: seafile-db
    restart: unless-stopped
    volumes:
      - ./seafile-db-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD={{ mysql_root_password}}
    networks:
      - services
  # Network traffic passes through nginx (as https) and then to seafile (as http)
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/vhost.d:/etc/nginx/vhost.d:ro
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./nginx/htpasswd:/etc/nginx/htpasswd:ro
    networks:
      - services
  # This container generate the nginx configuration
  nginx-gen:
    image: jwilder/docker-gen:0.8.4
    container_name: nginx-gen
    restart: always
    depends_on:
      - nginx
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:rw
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    networks:
      - services

  # This container refreshes the https certificate
  letsencrypt-nginx-proxy-companion:
    image: nginxproxy/acme-companion
    container_name: letsencrypt-nginx-proxy-companion
    restart: unless-stopped
    depends_on:
      - nginx
      - nginx-gen
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx/vhost.d:/etc/nginx/vhost.d:rw
      - ./nginx/certs:/etc/nginx/certs:rw
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
    networks:
      - services
  cloudflare-ddns:
    image: oznu/cloudflare-ddns:latest
    restart: always
    environment:
      - API_KEY={{cloudflare_api_key}}
      - ZONE={{cloudflare_zone}}
      - SUBDOMAIN=seafile
      - PROXIED=true
    networks:
      - services     
networks:
  services:
networks:
  services:
   driver: bridge
   ipam:
    config:
     - subnet: 172.16.57.0/24